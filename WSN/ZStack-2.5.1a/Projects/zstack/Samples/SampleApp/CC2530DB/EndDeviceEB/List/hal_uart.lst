###############################################################################
#
# IAR C/C++ Compiler V9.30.1.3056 for 8051                22/May/2018  20:40:17
# Copyright 2004-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\design\ZStack-2.5.1a\Components\hal\target\CC2530EB\hal_uart.c
#    Command line       =  
#        -f
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
#        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0x333;
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=0 -DQUEUED_POLL_RATE=0 -DRESPONSE_POLL_RATE=0)
#        -DREJOIN_POLL_RATE=1000
#        D:\design\ZStack-2.5.1a\Components\hal\target\CC2530EB\hal_uart.c -D
#        NWK_AUTO_POLL -D ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC
#        -D xLCD_SUPPORTED=DEBUG -D POWER_SAVING -lC
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\List
#        -lA
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\List
#        --diag_suppress Pe001,Pa010 -o
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\Obj
#        -e --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 8 -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\ -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\Source\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -On --require_prototypes
#    List file          =  
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\List\hal_uart.lst
#    Object file        =  
#        D:\design\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\Obj\hal_uart.r51
#
###############################################################################

D:\design\ZStack-2.5.1a\Components\hal\target\CC2530EB\hal_uart.c
      1          /**************************************************************************************************
      2            Filename:       _hal_uart.c
      3            Revised:        $Date: 2009-06-12 09:16:43 -0700 (Fri, 12 Jun 2009) $
      4            Revision:       $Revision: 20142 $
      5          
      6            Description: This file contains the interface to the H/W UART driver.
      7          
      8          
      9            Copyright 2006-2009 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose andy.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED “AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.anlde.com.
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41           * INCLUDES
     42           */
     43          
     44          #include "hal_board_cfg.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x86
   \   unsigned char volatile __sfr U0CSR
   \                     U0CSR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x95
   \   unsigned char volatile __sfr ST0
   \                     ST0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xab
   \   unsigned char volatile __sfr P0IEN
   \                     P0IEN:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc2
   \   unsigned char volatile __sfr U0BAUD
   \                     U0BAUD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc4
   \   unsigned char volatile __sfr U0UCR
   \                     U0UCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc5
   \   unsigned char volatile __sfr U0GCR
   \                     U0GCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd1
   \   unsigned char volatile __sfr DMAIRQ
   \                     DMAIRQ:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd6
   \   unsigned char volatile __sfr DMAARM
   \                     DMAARM:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd7
   \   unsigned char volatile __sfr DMAREQ
   \                     DMAREQ:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf1
   \   unsigned char volatile __sfr PERCFG
   \                     PERCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf2
   \   unsigned char volatile __sfr ADCCFG
   \                     ADCCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
     45          #include "hal_defs.h"
     46          #include "hal_types.h"
     47          #include "hal_uart.h"
     48          
     49          /*********************************************************************
     50           * MACROS
     51           */
     52          
     53          /*********************************************************************
     54           * TYPEDEFS
     55           */
     56          
     57          /*********************************************************************
     58           * CONSTANTS
     59           */
     60          
     61          /*********************************************************************
     62           * GLOBAL VARIABLES
     63           */
     64          
     65          /*********************************************************************
     66           * GLOBAL FUNCTIONS
     67           */
     68          
     69          /*********************************************************************
     70           * LOCAL VARIABLES
     71           */
     72          
     73          /*********************************************************************
     74           * LOCAL FUNCTIONS
     75           */
     76          
     77          #if HAL_UART_DMA
     78          #include "_hal_uart_dma.c"

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \   static uartDMACfg_t dmaCfg
   \                     dmaCfg:
   \   000000                DS 1038
   \   00040E                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint8 findTail(void)
   \                     findTail:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   90....       MOV     DPTR,#dmaCfg + 512
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F9           MOV     R1,A
   \                     ??findTail_0:
   \   000009   E5C2         MOV     A,0xc2
   \   00000B   FC           MOV     R4,A
   \   00000C   7D00         MOV     R5,#0x0
   \   00000E   E9           MOV     A,R1
   \   00000F   FA           MOV     R2,A
   \   000010   7B00         MOV     R3,#0x0
   \   000012   EA           MOV     A,R2
   \   000013   75F002       MOV     B,#0x2
   \   000016   A4           MUL     AB
   \   000017   CA           XCH     A,R2
   \   000018   A8F0         MOV     R0,B
   \   00001A   75F000       MOV     B,#0x0
   \   00001D   A4           MUL     AB
   \   00001E   28           ADD     A,R0
   \   00001F   F8           MOV     R0,A
   \   000020   75F002       MOV     B,#0x2
   \   000023   EB           MOV     A,R3
   \   000024   A4           MUL     AB
   \   000025   28           ADD     A,R0
   \   000026   FB           MOV     R3,A
   \   000027   74..         MOV     A,#dmaCfg & 0xff
   \   000029   2A           ADD     A,R2
   \   00002A   F582         MOV     DPL,A
   \   00002C   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   00002E   3B           ADDC    A,R3
   \   00002F   F583         MOV     DPH,A
   \   000031   E0           MOVX    A,@DPTR
   \   000032   FA           MOV     R2,A
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   FB           MOV     R3,A
   \   000036   E4           CLR     A
   \   000037   CB           XCH     A,R3
   \   000038   FA           MOV     R2,A
   \   000039   EA           MOV     A,R2
   \   00003A   6C           XRL     A,R4
   \   00003B   7002         JNZ     ??findTail_1
   \   00003D   EB           MOV     A,R3
   \   00003E   6D           XRL     A,R5
   \                     ??findTail_1:
   \   00003F   7008         JNZ     ??findTail_2
   \   000041   09           INC     R1
   \   000042   90....       MOV     DPTR,#dmaCfg + 512
   \   000045   E0           MOVX    A,@DPTR
   \   000046   69           XRL     A,R1
   \   000047   70C0         JNZ     ??findTail_0
   \                     ??findTail_2:
   \   000049   D083         POP     DPH
   \   00004B   D082         POP     DPL
   \   00004D   02....       LJMP    ?BRET
   \   000050                REQUIRE U0BAUD

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTInitDMA(void)
   \                     HalUARTInitDMA:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   53FF3F       ANL     0xff,#0x3f
   \   000007   85FFFF       MOV     0xff,0xff
   \   00000A   53F1FE       ANL     0xf1,#0xfe
   \   00000D   43F30C       ORL     0xf3,#0xc
   \   000010   53F2F3       ANL     0xf2,#0xf3
   \   000013   758680       MOV     0x86,#-0x80
   \   000016   75C480       MOV     0xc4,#-0x80
   \   000019   7A..         MOV     R2,#(dmaCh1234 + 24) & 0xff
   \   00001B   7B..         MOV     R3,#((dmaCh1234 + 24) >> 8) & 0xff
   \   00001D   8A82         MOV     DPL,R2
   \   00001F   8B83         MOV     DPH,R3
   \   000021   A3           INC     DPTR
   \   000022   A3           INC     DPTR
   \   000023   7470         MOV     A,#0x70
   \   000025   F0           MOVX    @DPTR,A
   \   000026   8A82         MOV     DPL,R2
   \   000028   8B83         MOV     DPH,R3
   \   00002A   A3           INC     DPTR
   \   00002B   A3           INC     DPTR
   \   00002C   A3           INC     DPTR
   \   00002D   74C1         MOV     A,#-0x3f
   \   00002F   F0           MOVX    @DPTR,A
   \   000030   8A82         MOV     DPL,R2
   \   000032   8B83         MOV     DPH,R3
   \   000034   A3           INC     DPTR
   \   000035   A3           INC     DPTR
   \   000036   A3           INC     DPTR
   \   000037   A3           INC     DPTR
   \   000038   E0           MOVX    A,@DPTR
   \   000039   541F         ANL     A,#0x1f
   \   00003B   F0           MOVX    @DPTR,A
   \   00003C   8A82         MOV     DPL,R2
   \   00003E   8B83         MOV     DPH,R3
   \   000040   A3           INC     DPTR
   \   000041   A3           INC     DPTR
   \   000042   A3           INC     DPTR
   \   000043   A3           INC     DPTR
   \   000044   E0           MOVX    A,@DPTR
   \   000045   C0E0         PUSH    A
   \   000047   8A82         MOV     DPL,R2
   \   000049   8B83         MOV     DPH,R3
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   D0E0         POP     A
   \   000051   F0           MOVX    @DPTR,A
   \   000052   8A82         MOV     DPL,R2
   \   000054   8B83         MOV     DPH,R3
   \   000056   A3           INC     DPTR
   \   000057   A3           INC     DPTR
   \   000058   A3           INC     DPTR
   \   000059   A3           INC     DPTR
   \   00005A   A3           INC     DPTR
   \   00005B   A3           INC     DPTR
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   C2E7         CLR     0xE0 /* A   */.7
   \   00005F   F0           MOVX    @DPTR,A
   \   000060   8A82         MOV     DPL,R2
   \   000062   8B83         MOV     DPH,R3
   \   000064   A3           INC     DPTR
   \   000065   A3           INC     DPTR
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   A3           INC     DPTR
   \   00006A   E0           MOVX    A,@DPTR
   \   00006B   C0E0         PUSH    A
   \   00006D   8A82         MOV     DPL,R2
   \   00006F   8B83         MOV     DPH,R3
   \   000071   A3           INC     DPTR
   \   000072   A3           INC     DPTR
   \   000073   A3           INC     DPTR
   \   000074   A3           INC     DPTR
   \   000075   A3           INC     DPTR
   \   000076   A3           INC     DPTR
   \   000077   D0E0         POP     A
   \   000079   F0           MOVX    @DPTR,A
   \   00007A   8A82         MOV     DPL,R2
   \   00007C   8B83         MOV     DPH,R3
   \   00007E   A3           INC     DPTR
   \   00007F   A3           INC     DPTR
   \   000080   A3           INC     DPTR
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   549F         ANL     A,#0x9f
   \   000087   F0           MOVX    @DPTR,A
   \   000088   8A82         MOV     DPL,R2
   \   00008A   8B83         MOV     DPH,R3
   \   00008C   A3           INC     DPTR
   \   00008D   A3           INC     DPTR
   \   00008E   A3           INC     DPTR
   \   00008F   A3           INC     DPTR
   \   000090   A3           INC     DPTR
   \   000091   A3           INC     DPTR
   \   000092   E0           MOVX    A,@DPTR
   \   000093   C0E0         PUSH    A
   \   000095   8A82         MOV     DPL,R2
   \   000097   8B83         MOV     DPH,R3
   \   000099   A3           INC     DPTR
   \   00009A   A3           INC     DPTR
   \   00009B   A3           INC     DPTR
   \   00009C   A3           INC     DPTR
   \   00009D   A3           INC     DPTR
   \   00009E   A3           INC     DPTR
   \   00009F   D0E0         POP     A
   \   0000A1   F0           MOVX    @DPTR,A
   \   0000A2   8A82         MOV     DPL,R2
   \   0000A4   8B83         MOV     DPH,R3
   \   0000A6   A3           INC     DPTR
   \   0000A7   A3           INC     DPTR
   \   0000A8   A3           INC     DPTR
   \   0000A9   A3           INC     DPTR
   \   0000AA   A3           INC     DPTR
   \   0000AB   A3           INC     DPTR
   \   0000AC   E0           MOVX    A,@DPTR
   \   0000AD   54E0         ANL     A,#0xe0
   \   0000AF   F0           MOVX    @DPTR,A
   \   0000B0   8A82         MOV     DPL,R2
   \   0000B2   8B83         MOV     DPH,R3
   \   0000B4   A3           INC     DPTR
   \   0000B5   A3           INC     DPTR
   \   0000B6   A3           INC     DPTR
   \   0000B7   A3           INC     DPTR
   \   0000B8   A3           INC     DPTR
   \   0000B9   A3           INC     DPTR
   \   0000BA   E0           MOVX    A,@DPTR
   \   0000BB   440F         ORL     A,#0xf
   \   0000BD   F0           MOVX    @DPTR,A
   \   0000BE   8A82         MOV     DPL,R2
   \   0000C0   8B83         MOV     DPH,R3
   \   0000C2   A3           INC     DPTR
   \   0000C3   A3           INC     DPTR
   \   0000C4   A3           INC     DPTR
   \   0000C5   A3           INC     DPTR
   \   0000C6   A3           INC     DPTR
   \   0000C7   A3           INC     DPTR
   \   0000C8   A3           INC     DPTR
   \   0000C9   E0           MOVX    A,@DPTR
   \   0000CA   543F         ANL     A,#0x3f
   \   0000CC   F0           MOVX    @DPTR,A
   \   0000CD   8A82         MOV     DPL,R2
   \   0000CF   8B83         MOV     DPH,R3
   \   0000D1   A3           INC     DPTR
   \   0000D2   A3           INC     DPTR
   \   0000D3   A3           INC     DPTR
   \   0000D4   A3           INC     DPTR
   \   0000D5   A3           INC     DPTR
   \   0000D6   A3           INC     DPTR
   \   0000D7   A3           INC     DPTR
   \   0000D8   E0           MOVX    A,@DPTR
   \   0000D9   D2E6         SETB    0xE0 /* A   */.6
   \   0000DB   F0           MOVX    @DPTR,A
   \   0000DC   8A82         MOV     DPL,R2
   \   0000DE   8B83         MOV     DPH,R3
   \   0000E0   A3           INC     DPTR
   \   0000E1   A3           INC     DPTR
   \   0000E2   A3           INC     DPTR
   \   0000E3   A3           INC     DPTR
   \   0000E4   A3           INC     DPTR
   \   0000E5   A3           INC     DPTR
   \   0000E6   A3           INC     DPTR
   \   0000E7   E0           MOVX    A,@DPTR
   \   0000E8   54CF         ANL     A,#0xcf
   \   0000EA   F0           MOVX    @DPTR,A
   \   0000EB   8A82         MOV     DPL,R2
   \   0000ED   8B83         MOV     DPH,R3
   \   0000EF   A3           INC     DPTR
   \   0000F0   A3           INC     DPTR
   \   0000F1   A3           INC     DPTR
   \   0000F2   A3           INC     DPTR
   \   0000F3   A3           INC     DPTR
   \   0000F4   A3           INC     DPTR
   \   0000F5   A3           INC     DPTR
   \   0000F6   E0           MOVX    A,@DPTR
   \   0000F7   C0E0         PUSH    A
   \   0000F9   8A82         MOV     DPL,R2
   \   0000FB   8B83         MOV     DPH,R3
   \   0000FD   A3           INC     DPTR
   \   0000FE   A3           INC     DPTR
   \   0000FF   A3           INC     DPTR
   \   000100   A3           INC     DPTR
   \   000101   A3           INC     DPTR
   \   000102   A3           INC     DPTR
   \   000103   A3           INC     DPTR
   \   000104   D0E0         POP     A
   \   000106   F0           MOVX    @DPTR,A
   \   000107   8A82         MOV     DPL,R2
   \   000109   8B83         MOV     DPH,R3
   \   00010B   A3           INC     DPTR
   \   00010C   A3           INC     DPTR
   \   00010D   A3           INC     DPTR
   \   00010E   A3           INC     DPTR
   \   00010F   A3           INC     DPTR
   \   000110   A3           INC     DPTR
   \   000111   A3           INC     DPTR
   \   000112   E0           MOVX    A,@DPTR
   \   000113   C2E3         CLR     0xE0 /* A   */.3
   \   000115   F0           MOVX    @DPTR,A
   \   000116   8A82         MOV     DPL,R2
   \   000118   8B83         MOV     DPH,R3
   \   00011A   A3           INC     DPTR
   \   00011B   A3           INC     DPTR
   \   00011C   A3           INC     DPTR
   \   00011D   A3           INC     DPTR
   \   00011E   A3           INC     DPTR
   \   00011F   A3           INC     DPTR
   \   000120   A3           INC     DPTR
   \   000121   E0           MOVX    A,@DPTR
   \   000122   D2E3         SETB    0xE0 /* A   */.3
   \   000124   F0           MOVX    @DPTR,A
   \   000125   8A82         MOV     DPL,R2
   \   000127   8B83         MOV     DPH,R3
   \   000129   A3           INC     DPTR
   \   00012A   A3           INC     DPTR
   \   00012B   A3           INC     DPTR
   \   00012C   A3           INC     DPTR
   \   00012D   A3           INC     DPTR
   \   00012E   A3           INC     DPTR
   \   00012F   A3           INC     DPTR
   \   000130   E0           MOVX    A,@DPTR
   \   000131   C2E2         CLR     0xE0 /* A   */.2
   \   000133   F0           MOVX    @DPTR,A
   \   000134   8A82         MOV     DPL,R2
   \   000136   8B83         MOV     DPH,R3
   \   000138   A3           INC     DPTR
   \   000139   A3           INC     DPTR
   \   00013A   A3           INC     DPTR
   \   00013B   A3           INC     DPTR
   \   00013C   A3           INC     DPTR
   \   00013D   A3           INC     DPTR
   \   00013E   A3           INC     DPTR
   \   00013F   E0           MOVX    A,@DPTR
   \   000140   C0E0         PUSH    A
   \   000142   8A82         MOV     DPL,R2
   \   000144   8B83         MOV     DPH,R3
   \   000146   A3           INC     DPTR
   \   000147   A3           INC     DPTR
   \   000148   A3           INC     DPTR
   \   000149   A3           INC     DPTR
   \   00014A   A3           INC     DPTR
   \   00014B   A3           INC     DPTR
   \   00014C   A3           INC     DPTR
   \   00014D   D0E0         POP     A
   \   00014F   F0           MOVX    @DPTR,A
   \   000150   8A82         MOV     DPL,R2
   \   000152   8B83         MOV     DPH,R3
   \   000154   A3           INC     DPTR
   \   000155   A3           INC     DPTR
   \   000156   A3           INC     DPTR
   \   000157   A3           INC     DPTR
   \   000158   A3           INC     DPTR
   \   000159   A3           INC     DPTR
   \   00015A   A3           INC     DPTR
   \   00015B   E0           MOVX    A,@DPTR
   \   00015C   54FC         ANL     A,#0xfc
   \   00015E   F0           MOVX    @DPTR,A
   \   00015F   8A82         MOV     DPL,R2
   \   000161   8B83         MOV     DPH,R3
   \   000163   A3           INC     DPTR
   \   000164   A3           INC     DPTR
   \   000165   A3           INC     DPTR
   \   000166   A3           INC     DPTR
   \   000167   A3           INC     DPTR
   \   000168   A3           INC     DPTR
   \   000169   A3           INC     DPTR
   \   00016A   E0           MOVX    A,@DPTR
   \   00016B   D2E1         SETB    0xE0 /* A   */.1
   \   00016D   F0           MOVX    @DPTR,A
   \   00016E   7A..         MOV     R2,#(dmaCh1234 + 16) & 0xff
   \   000170   7B..         MOV     R3,#((dmaCh1234 + 16) >> 8) & 0xff
   \   000172   8A82         MOV     DPL,R2
   \   000174   8B83         MOV     DPH,R3
   \   000176   7470         MOV     A,#0x70
   \   000178   F0           MOVX    @DPTR,A
   \   000179   8A82         MOV     DPL,R2
   \   00017B   8B83         MOV     DPH,R3
   \   00017D   A3           INC     DPTR
   \   00017E   74C1         MOV     A,#-0x3f
   \   000180   F0           MOVX    @DPTR,A
   \   000181   8A82         MOV     DPL,R2
   \   000183   8B83         MOV     DPH,R3
   \   000185   A3           INC     DPTR
   \   000186   A3           INC     DPTR
   \   000187   A3           INC     DPTR
   \   000188   A3           INC     DPTR
   \   000189   E0           MOVX    A,@DPTR
   \   00018A   541F         ANL     A,#0x1f
   \   00018C   F0           MOVX    @DPTR,A
   \   00018D   8A82         MOV     DPL,R2
   \   00018F   8B83         MOV     DPH,R3
   \   000191   A3           INC     DPTR
   \   000192   A3           INC     DPTR
   \   000193   A3           INC     DPTR
   \   000194   A3           INC     DPTR
   \   000195   E0           MOVX    A,@DPTR
   \   000196   C0E0         PUSH    A
   \   000198   8A82         MOV     DPL,R2
   \   00019A   8B83         MOV     DPH,R3
   \   00019C   A3           INC     DPTR
   \   00019D   A3           INC     DPTR
   \   00019E   A3           INC     DPTR
   \   00019F   A3           INC     DPTR
   \   0001A0   D0E0         POP     A
   \   0001A2   F0           MOVX    @DPTR,A
   \   0001A3   8A82         MOV     DPL,R2
   \   0001A5   8B83         MOV     DPH,R3
   \   0001A7   A3           INC     DPTR
   \   0001A8   A3           INC     DPTR
   \   0001A9   A3           INC     DPTR
   \   0001AA   A3           INC     DPTR
   \   0001AB   A3           INC     DPTR
   \   0001AC   A3           INC     DPTR
   \   0001AD   E0           MOVX    A,@DPTR
   \   0001AE   C2E7         CLR     0xE0 /* A   */.7
   \   0001B0   F0           MOVX    @DPTR,A
   \   0001B1   8A82         MOV     DPL,R2
   \   0001B3   8B83         MOV     DPH,R3
   \   0001B5   A3           INC     DPTR
   \   0001B6   A3           INC     DPTR
   \   0001B7   A3           INC     DPTR
   \   0001B8   A3           INC     DPTR
   \   0001B9   A3           INC     DPTR
   \   0001BA   A3           INC     DPTR
   \   0001BB   E0           MOVX    A,@DPTR
   \   0001BC   D2E7         SETB    0xE0 /* A   */.7
   \   0001BE   F0           MOVX    @DPTR,A
   \   0001BF   8A82         MOV     DPL,R2
   \   0001C1   8B83         MOV     DPH,R3
   \   0001C3   A3           INC     DPTR
   \   0001C4   A3           INC     DPTR
   \   0001C5   A3           INC     DPTR
   \   0001C6   A3           INC     DPTR
   \   0001C7   A3           INC     DPTR
   \   0001C8   A3           INC     DPTR
   \   0001C9   E0           MOVX    A,@DPTR
   \   0001CA   549F         ANL     A,#0x9f
   \   0001CC   F0           MOVX    @DPTR,A
   \   0001CD   8A82         MOV     DPL,R2
   \   0001CF   8B83         MOV     DPH,R3
   \   0001D1   A3           INC     DPTR
   \   0001D2   A3           INC     DPTR
   \   0001D3   A3           INC     DPTR
   \   0001D4   A3           INC     DPTR
   \   0001D5   A3           INC     DPTR
   \   0001D6   A3           INC     DPTR
   \   0001D7   E0           MOVX    A,@DPTR
   \   0001D8   D2E6         SETB    0xE0 /* A   */.6
   \   0001DA   F0           MOVX    @DPTR,A
   \   0001DB   8A82         MOV     DPL,R2
   \   0001DD   8B83         MOV     DPH,R3
   \   0001DF   A3           INC     DPTR
   \   0001E0   A3           INC     DPTR
   \   0001E1   A3           INC     DPTR
   \   0001E2   A3           INC     DPTR
   \   0001E3   A3           INC     DPTR
   \   0001E4   A3           INC     DPTR
   \   0001E5   E0           MOVX    A,@DPTR
   \   0001E6   54E0         ANL     A,#0xe0
   \   0001E8   F0           MOVX    @DPTR,A
   \   0001E9   8A82         MOV     DPL,R2
   \   0001EB   8B83         MOV     DPH,R3
   \   0001ED   A3           INC     DPTR
   \   0001EE   A3           INC     DPTR
   \   0001EF   A3           INC     DPTR
   \   0001F0   A3           INC     DPTR
   \   0001F1   A3           INC     DPTR
   \   0001F2   A3           INC     DPTR
   \   0001F3   E0           MOVX    A,@DPTR
   \   0001F4   440E         ORL     A,#0xe
   \   0001F6   F0           MOVX    @DPTR,A
   \   0001F7   8A82         MOV     DPL,R2
   \   0001F9   8B83         MOV     DPH,R3
   \   0001FB   A3           INC     DPTR
   \   0001FC   A3           INC     DPTR
   \   0001FD   A3           INC     DPTR
   \   0001FE   A3           INC     DPTR
   \   0001FF   A3           INC     DPTR
   \   000200   A3           INC     DPTR
   \   000201   A3           INC     DPTR
   \   000202   E0           MOVX    A,@DPTR
   \   000203   543F         ANL     A,#0x3f
   \   000205   F0           MOVX    @DPTR,A
   \   000206   8A82         MOV     DPL,R2
   \   000208   8B83         MOV     DPH,R3
   \   00020A   A3           INC     DPTR
   \   00020B   A3           INC     DPTR
   \   00020C   A3           INC     DPTR
   \   00020D   A3           INC     DPTR
   \   00020E   A3           INC     DPTR
   \   00020F   A3           INC     DPTR
   \   000210   A3           INC     DPTR
   \   000211   E0           MOVX    A,@DPTR
   \   000212   C0E0         PUSH    A
   \   000214   8A82         MOV     DPL,R2
   \   000216   8B83         MOV     DPH,R3
   \   000218   A3           INC     DPTR
   \   000219   A3           INC     DPTR
   \   00021A   A3           INC     DPTR
   \   00021B   A3           INC     DPTR
   \   00021C   A3           INC     DPTR
   \   00021D   A3           INC     DPTR
   \   00021E   A3           INC     DPTR
   \   00021F   D0E0         POP     A
   \   000221   F0           MOVX    @DPTR,A
   \   000222   8A82         MOV     DPL,R2
   \   000224   8B83         MOV     DPH,R3
   \   000226   A3           INC     DPTR
   \   000227   A3           INC     DPTR
   \   000228   A3           INC     DPTR
   \   000229   A3           INC     DPTR
   \   00022A   A3           INC     DPTR
   \   00022B   A3           INC     DPTR
   \   00022C   A3           INC     DPTR
   \   00022D   E0           MOVX    A,@DPTR
   \   00022E   54CF         ANL     A,#0xcf
   \   000230   F0           MOVX    @DPTR,A
   \   000231   8A82         MOV     DPL,R2
   \   000233   8B83         MOV     DPH,R3
   \   000235   A3           INC     DPTR
   \   000236   A3           INC     DPTR
   \   000237   A3           INC     DPTR
   \   000238   A3           INC     DPTR
   \   000239   A3           INC     DPTR
   \   00023A   A3           INC     DPTR
   \   00023B   A3           INC     DPTR
   \   00023C   E0           MOVX    A,@DPTR
   \   00023D   D2E4         SETB    0xE0 /* A   */.4
   \   00023F   F0           MOVX    @DPTR,A
   \   000240   78..         MOV     R0,#dmaCfg & 0xff
   \   000242   79..         MOV     R1,#(dmaCfg >> 8) & 0xff
   \   000244   E4           CLR     A
   \   000245   C9           XCH     A,R1
   \   000246   F8           MOV     R0,A
   \   000247   E8           MOV     A,R0
   \   000248   C0E0         PUSH    A
   \   00024A   8A82         MOV     DPL,R2
   \   00024C   8B83         MOV     DPH,R3
   \   00024E   A3           INC     DPTR
   \   00024F   A3           INC     DPTR
   \   000250   D0E0         POP     A
   \   000252   F0           MOVX    @DPTR,A
   \   000253   8A82         MOV     DPL,R2
   \   000255   8B83         MOV     DPH,R3
   \   000257   A3           INC     DPTR
   \   000258   A3           INC     DPTR
   \   000259   A3           INC     DPTR
   \   00025A   74..         MOV     A,#dmaCfg & 0xff
   \   00025C   F0           MOVX    @DPTR,A
   \   00025D   8A82         MOV     DPL,R2
   \   00025F   8B83         MOV     DPH,R3
   \   000261   A3           INC     DPTR
   \   000262   A3           INC     DPTR
   \   000263   A3           INC     DPTR
   \   000264   A3           INC     DPTR
   \   000265   A3           INC     DPTR
   \   000266   7400         MOV     A,#0x0
   \   000268   F0           MOVX    @DPTR,A
   \   000269   8A82         MOV     DPL,R2
   \   00026B   8B83         MOV     DPH,R3
   \   00026D   A3           INC     DPTR
   \   00026E   A3           INC     DPTR
   \   00026F   A3           INC     DPTR
   \   000270   A3           INC     DPTR
   \   000271   E0           MOVX    A,@DPTR
   \   000272   54E0         ANL     A,#0xe0
   \   000274   F0           MOVX    @DPTR,A
   \   000275   8A82         MOV     DPL,R2
   \   000277   8B83         MOV     DPH,R3
   \   000279   A3           INC     DPTR
   \   00027A   A3           INC     DPTR
   \   00027B   A3           INC     DPTR
   \   00027C   A3           INC     DPTR
   \   00027D   E0           MOVX    A,@DPTR
   \   00027E   D2E0         SETB    0xE0 /* A   */.0
   \   000280   F0           MOVX    @DPTR,A
   \   000281   8A82         MOV     DPL,R2
   \   000283   8B83         MOV     DPH,R3
   \   000285   A3           INC     DPTR
   \   000286   A3           INC     DPTR
   \   000287   A3           INC     DPTR
   \   000288   A3           INC     DPTR
   \   000289   A3           INC     DPTR
   \   00028A   A3           INC     DPTR
   \   00028B   A3           INC     DPTR
   \   00028C   E0           MOVX    A,@DPTR
   \   00028D   C2E3         CLR     0xE0 /* A   */.3
   \   00028F   F0           MOVX    @DPTR,A
   \   000290   8A82         MOV     DPL,R2
   \   000292   8B83         MOV     DPH,R3
   \   000294   A3           INC     DPTR
   \   000295   A3           INC     DPTR
   \   000296   A3           INC     DPTR
   \   000297   A3           INC     DPTR
   \   000298   A3           INC     DPTR
   \   000299   A3           INC     DPTR
   \   00029A   A3           INC     DPTR
   \   00029B   E0           MOVX    A,@DPTR
   \   00029C   C0E0         PUSH    A
   \   00029E   8A82         MOV     DPL,R2
   \   0002A0   8B83         MOV     DPH,R3
   \   0002A2   A3           INC     DPTR
   \   0002A3   A3           INC     DPTR
   \   0002A4   A3           INC     DPTR
   \   0002A5   A3           INC     DPTR
   \   0002A6   A3           INC     DPTR
   \   0002A7   A3           INC     DPTR
   \   0002A8   A3           INC     DPTR
   \   0002A9   D0E0         POP     A
   \   0002AB   F0           MOVX    @DPTR,A
   \   0002AC   8A82         MOV     DPL,R2
   \   0002AE   8B83         MOV     DPH,R3
   \   0002B0   A3           INC     DPTR
   \   0002B1   A3           INC     DPTR
   \   0002B2   A3           INC     DPTR
   \   0002B3   A3           INC     DPTR
   \   0002B4   A3           INC     DPTR
   \   0002B5   A3           INC     DPTR
   \   0002B6   A3           INC     DPTR
   \   0002B7   E0           MOVX    A,@DPTR
   \   0002B8   C2E2         CLR     0xE0 /* A   */.2
   \   0002BA   F0           MOVX    @DPTR,A
   \   0002BB   8A82         MOV     DPL,R2
   \   0002BD   8B83         MOV     DPH,R3
   \   0002BF   A3           INC     DPTR
   \   0002C0   A3           INC     DPTR
   \   0002C1   A3           INC     DPTR
   \   0002C2   A3           INC     DPTR
   \   0002C3   A3           INC     DPTR
   \   0002C4   A3           INC     DPTR
   \   0002C5   A3           INC     DPTR
   \   0002C6   E0           MOVX    A,@DPTR
   \   0002C7   C0E0         PUSH    A
   \   0002C9   8A82         MOV     DPL,R2
   \   0002CB   8B83         MOV     DPH,R3
   \   0002CD   A3           INC     DPTR
   \   0002CE   A3           INC     DPTR
   \   0002CF   A3           INC     DPTR
   \   0002D0   A3           INC     DPTR
   \   0002D1   A3           INC     DPTR
   \   0002D2   A3           INC     DPTR
   \   0002D3   A3           INC     DPTR
   \   0002D4   D0E0         POP     A
   \   0002D6   F0           MOVX    @DPTR,A
   \   0002D7   8A82         MOV     DPL,R2
   \   0002D9   8B83         MOV     DPH,R3
   \   0002DB   A3           INC     DPTR
   \   0002DC   A3           INC     DPTR
   \   0002DD   A3           INC     DPTR
   \   0002DE   A3           INC     DPTR
   \   0002DF   A3           INC     DPTR
   \   0002E0   A3           INC     DPTR
   \   0002E1   A3           INC     DPTR
   \   0002E2   E0           MOVX    A,@DPTR
   \   0002E3   54FC         ANL     A,#0xfc
   \   0002E5   F0           MOVX    @DPTR,A
   \   0002E6   8A82         MOV     DPL,R2
   \   0002E8   8B83         MOV     DPH,R3
   \   0002EA   A3           INC     DPTR
   \   0002EB   A3           INC     DPTR
   \   0002EC   A3           INC     DPTR
   \   0002ED   A3           INC     DPTR
   \   0002EE   A3           INC     DPTR
   \   0002EF   A3           INC     DPTR
   \   0002F0   A3           INC     DPTR
   \   0002F1   E0           MOVX    A,@DPTR
   \   0002F2   D2E1         SETB    0xE0 /* A   */.1
   \   0002F4   F0           MOVX    @DPTR,A
   \   0002F5   D083         POP     DPH
   \   0002F7   D082         POP     DPL
   \   0002F9   02....       LJMP    ?BRET
   \   0002FC                REQUIRE P2DIR
   \   0002FC                REQUIRE PERCFG
   \   0002FC                REQUIRE P0SEL
   \   0002FC                REQUIRE ADCCFG
   \   0002FC                REQUIRE U0CSR
   \   0002FC                REQUIRE U0UCR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTOpenDMA(halUARTCfg_t *)
   \                     HalUARTOpenDMA:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   EE           MOV     A,R6
   \   00000A   241B         ADD     A,#0x1b
   \   00000C   F582         MOV     DPL,A
   \   00000E   E4           CLR     A
   \   00000F   3F           ADDC    A,R7
   \   000010   F583         MOV     DPH,A
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F8           MOV     R0,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F9           MOV     R1,A
   \   000017   90....       MOV     DPTR,#dmaCfg + 1036
   \   00001A   E8           MOV     A,R0
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   E9           MOV     A,R1
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   8E82         MOV     DPL,R6
   \   000021   8F83         MOV     DPH,R7
   \   000023   A3           INC     DPTR
   \   000024   E0           MOVX    A,@DPTR
   \   000025   6403         XRL     A,#0x3
   \   000027   600A         JZ      ??HalUARTOpenDMA_0
   \   000029   8E82         MOV     DPL,R6
   \   00002B   8F83         MOV     DPH,R7
   \   00002D   A3           INC     DPTR
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   6404         XRL     A,#0x4
   \   000031   7005         JNZ     ??HalUARTOpenDMA_1
   \                     ??HalUARTOpenDMA_0:
   \   000033   75C2D8       MOV     0xc2,#-0x28
   \   000036   8003         SJMP    ??HalUARTOpenDMA_2
   \                     ??HalUARTOpenDMA_1:
   \   000038   75C23B       MOV     0xc2,#0x3b
   \                     ??HalUARTOpenDMA_2:
   \   00003B   8E82         MOV     DPL,R6
   \   00003D   8F83         MOV     DPH,R7
   \   00003F   A3           INC     DPTR
   \   000040   E0           MOVX    A,@DPTR
   \   000041   600B         JZ      ??HalUARTOpenDMA_3
   \   000043   14           DEC     A
   \   000044   6013         JZ      ??HalUARTOpenDMA_4
   \   000046   14           DEC     A
   \   000047   601B         JZ      ??HalUARTOpenDMA_5
   \   000049   14           DEC     A
   \   00004A   6023         JZ      ??HalUARTOpenDMA_6
   \   00004C   802C         SJMP    ??HalUARTOpenDMA_7
   \                     ??HalUARTOpenDMA_3:
   \   00004E   75C508       MOV     0xc5,#0x8
   \   000051   90....       MOV     DPTR,#dmaCfg + 1032
   \   000054   7423         MOV     A,#0x23
   \   000056   F0           MOVX    @DPTR,A
   \   000057   802A         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_4:
   \   000059   75C509       MOV     0xc5,#0x9
   \   00005C   90....       MOV     DPTR,#dmaCfg + 1032
   \   00005F   7412         MOV     A,#0x12
   \   000061   F0           MOVX    @DPTR,A
   \   000062   801F         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_5:
   \   000064   75C50A       MOV     0xc5,#0xa
   \   000067   90....       MOV     DPTR,#dmaCfg + 1032
   \   00006A   7409         MOV     A,#0x9
   \   00006C   F0           MOVX    @DPTR,A
   \   00006D   8014         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_6:
   \   00006F   75C50A       MOV     0xc5,#0xa
   \   000072   90....       MOV     DPTR,#dmaCfg + 1032
   \   000075   7406         MOV     A,#0x6
   \   000077   F0           MOVX    @DPTR,A
   \   000078   8009         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_7:
   \   00007A   75C50B       MOV     0xc5,#0xb
   \   00007D   90....       MOV     DPTR,#dmaCfg + 1032
   \   000080   7403         MOV     A,#0x3
   \   000082   F0           MOVX    @DPTR,A
   \                     ??HalUARTOpenDMA_8:
   \   000083   8E82         MOV     DPL,R6
   \   000085   8F83         MOV     DPH,R7
   \   000087   A3           INC     DPTR
   \   000088   A3           INC     DPTR
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   600D         JZ      ??HalUARTOpenDMA_9
   \   00008C   75C442       MOV     0xc4,#0x42
   \   00008F   43F310       ORL     0xf3,#0x10
   \   000092   C285         CLR     0x80.5
   \   000094   43FD20       ORL     0xfd,#0x20
   \   000097   8003         SJMP    ??HalUARTOpenDMA_10
   \                     ??HalUARTOpenDMA_9:
   \   000099   75C402       MOV     0xc4,#0x2
   \                     ??HalUARTOpenDMA_10:
   \   00009C   9070C1       MOV     DPTR,#0x70c1
   \   00009F   E0           MOVX    A,@DPTR
   \   0000A0   F8           MOV     R0,A
   \   0000A1   7900         MOV     R1,#0x0
   \   0000A3   90....       MOV     DPTR,#dmaCfg
   \   0000A6   E8           MOV     A,R0
   \   0000A7   F0           MOVX    @DPTR,A
   \   0000A8   A3           INC     DPTR
   \   0000A9   E9           MOV     A,R1
   \   0000AA   F0           MOVX    @DPTR,A
   \   0000AB   75D1F7       MOV     0xd1,#-0x9
   \   0000AE   75D608       MOV     0xd6,#0x8
   \   0000B1                ; Setup parameters for call to function osal_memset
   \   0000B1   7C00         MOV     R4,#0x0
   \   0000B3   7D02         MOV     R5,#0x2
   \   0000B5   E5C2         MOV     A,0xc2
   \   0000B7   64FF         XRL     A,#0xff
   \   0000B9   F9           MOV     R1,A
   \   0000BA   7A..         MOV     R2,#dmaCfg & 0xff
   \   0000BC   7B..         MOV     R3,#(dmaCfg >> 8) & 0xff
   \   0000BE   12....       LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
   \   0000C1   438640       ORL     0x86,#0x40
   \   0000C4   90....       MOV     DPTR,#dmaCfg + 1035
   \   0000C7   7400         MOV     A,#0x0
   \   0000C9   F0           MOVX    @DPTR,A
   \   0000CA   90....       MOV     DPTR,#dmaCfg + 1034
   \   0000CD   7400         MOV     A,#0x0
   \   0000CF   F0           MOVX    @DPTR,A
   \   0000D0   7F01         MOV     R7,#0x1
   \   0000D2   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000D5                REQUIRE U0BAUD
   \   0000D5                REQUIRE U0GCR
   \   0000D5                REQUIRE U0UCR
   \   0000D5                REQUIRE P0SEL
   \   0000D5                REQUIRE _A_P0
   \   0000D5                REQUIRE P0DIR
   \   0000D5                REQUIRE DMAIRQ
   \   0000D5                REQUIRE DMAARM
   \   0000D5                REQUIRE U0CSR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint16 HalUARTReadDMA(uint8 *, uint16)
   \                     HalUARTReadDMA:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   F9           MOV     R1,A
   \   000009   7A00         MOV     R2,#0x0
   \   00000B   7B00         MOV     R3,#0x0
   \                     ??HalUARTReadDMA_0:
   \   00000D   C3           CLR     C
   \   00000E   EA           MOV     A,R2
   \   00000F   9C           SUBB    A,R4
   \   000010   EB           MOV     A,R3
   \   000011   9D           SUBB    A,R5
   \   000012   4003         JC      $+5
   \   000014   02....       LJMP    ??HalUARTReadDMA_1 & 0xFFFF
   \   000017   E5C2         MOV     A,0xc2
   \   000019   F5..         MOV     ?V0,A
   \   00001B   75..00       MOV     ?V1,#0x0
   \   00001E   90....       MOV     DPTR,#dmaCfg + 512
   \   000021   E0           MOVX    A,@DPTR
   \   000022   FE           MOV     R6,A
   \   000023   7F00         MOV     R7,#0x0
   \   000025   EE           MOV     A,R6
   \   000026   75F002       MOV     B,#0x2
   \   000029   A4           MUL     AB
   \   00002A   CE           XCH     A,R6
   \   00002B   85F0..       MOV     ?V2,B
   \   00002E   75F000       MOV     B,#0x0
   \   000031   A4           MUL     AB
   \   000032   25..         ADD     A,?V2
   \   000034   F5..         MOV     ?V2,A
   \   000036   75F002       MOV     B,#0x2
   \   000039   EF           MOV     A,R7
   \   00003A   A4           MUL     AB
   \   00003B   25..         ADD     A,?V2
   \   00003D   FF           MOV     R7,A
   \   00003E   74..         MOV     A,#dmaCfg & 0xff
   \   000040   2E           ADD     A,R6
   \   000041   F582         MOV     DPL,A
   \   000043   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000045   3F           ADDC    A,R7
   \   000046   F583         MOV     DPH,A
   \   000048   E0           MOVX    A,@DPTR
   \   000049   FE           MOV     R6,A
   \   00004A   A3           INC     DPTR
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   FF           MOV     R7,A
   \   00004D   E4           CLR     A
   \   00004E   CF           XCH     A,R7
   \   00004F   FE           MOV     R6,A
   \   000050   EE           MOV     A,R6
   \   000051   65..         XRL     A,?V0
   \   000053   7003         JNZ     ??HalUARTReadDMA_2
   \   000055   EF           MOV     A,R7
   \   000056   65..         XRL     A,?V1
   \                     ??HalUARTReadDMA_2:
   \   000058   6003         JZ      $+5
   \   00005A   02....       LJMP    ??HalUARTReadDMA_1 & 0xFFFF
   \   00005D   90....       MOV     DPTR,#dmaCfg + 512
   \   000060   E0           MOVX    A,@DPTR
   \   000061   FE           MOV     R6,A
   \   000062   7F00         MOV     R7,#0x0
   \   000064   EE           MOV     A,R6
   \   000065   75F002       MOV     B,#0x2
   \   000068   A4           MUL     AB
   \   000069   CE           XCH     A,R6
   \   00006A   85F0..       MOV     ?V0,B
   \   00006D   75F000       MOV     B,#0x0
   \   000070   A4           MUL     AB
   \   000071   25..         ADD     A,?V0
   \   000073   F5..         MOV     ?V0,A
   \   000075   75F002       MOV     B,#0x2
   \   000078   EF           MOV     A,R7
   \   000079   A4           MUL     AB
   \   00007A   25..         ADD     A,?V0
   \   00007C   FF           MOV     R7,A
   \   00007D   74..         MOV     A,#dmaCfg & 0xff
   \   00007F   2E           ADD     A,R6
   \   000080   F582         MOV     DPL,A
   \   000082   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000084   3F           ADDC    A,R7
   \   000085   F583         MOV     DPH,A
   \   000087   E0           MOVX    A,@DPTR
   \   000088   FE           MOV     R6,A
   \   000089   A3           INC     DPTR
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   FF           MOV     R7,A
   \   00008C   EE           MOV     A,R6
   \   00008D   C0E0         PUSH    A
   \   00008F   8882         MOV     DPL,R0
   \   000091   8983         MOV     DPH,R1
   \   000093   D0E0         POP     A
   \   000095   F0           MOVX    @DPTR,A
   \   000096   8882         MOV     DPL,R0
   \   000098   8983         MOV     DPH,R1
   \   00009A   A3           INC     DPTR
   \   00009B   A882         MOV     R0,DPL
   \   00009D   A983         MOV     R1,DPH
   \   00009F   E5C2         MOV     A,0xc2
   \   0000A1   FE           MOV     R6,A
   \   0000A2   7F00         MOV     R7,#0x0
   \   0000A4   EE           MOV     A,R6
   \   0000A5   64FF         XRL     A,#0xff
   \   0000A7   F5..         MOV     ?V0,A
   \   0000A9   EF           MOV     A,R7
   \   0000AA   6400         XRL     A,#0x0
   \   0000AC   F5..         MOV     ?V1,A
   \   0000AE   E4           CLR     A
   \   0000AF   C5..         XCH     A,?V0
   \   0000B1   F5..         MOV     ?V1,A
   \   0000B3   90....       MOV     DPTR,#dmaCfg + 512
   \   0000B6   E0           MOVX    A,@DPTR
   \   0000B7   FE           MOV     R6,A
   \   0000B8   7F00         MOV     R7,#0x0
   \   0000BA   EE           MOV     A,R6
   \   0000BB   75F002       MOV     B,#0x2
   \   0000BE   A4           MUL     AB
   \   0000BF   CE           XCH     A,R6
   \   0000C0   85F0..       MOV     ?V2,B
   \   0000C3   75F000       MOV     B,#0x0
   \   0000C6   A4           MUL     AB
   \   0000C7   25..         ADD     A,?V2
   \   0000C9   F5..         MOV     ?V2,A
   \   0000CB   75F002       MOV     B,#0x2
   \   0000CE   EF           MOV     A,R7
   \   0000CF   A4           MUL     AB
   \   0000D0   25..         ADD     A,?V2
   \   0000D2   FF           MOV     R7,A
   \   0000D3   74..         MOV     A,#dmaCfg & 0xff
   \   0000D5   2E           ADD     A,R6
   \   0000D6   F582         MOV     DPL,A
   \   0000D8   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   0000DA   3F           ADDC    A,R7
   \   0000DB   F583         MOV     DPH,A
   \   0000DD   E5..         MOV     A,?V0
   \   0000DF   F0           MOVX    @DPTR,A
   \   0000E0   A3           INC     DPTR
   \   0000E1   E5..         MOV     A,?V1
   \   0000E3   F0           MOVX    @DPTR,A
   \   0000E4   90....       MOV     DPTR,#dmaCfg + 512
   \   0000E7   E0           MOVX    A,@DPTR
   \   0000E8   2401         ADD     A,#0x1
   \   0000EA   F0           MOVX    @DPTR,A
   \   0000EB   0A           INC     R2
   \   0000EC   EA           MOV     A,R2
   \   0000ED   7001         JNZ     ??HalUARTReadDMA_3
   \   0000EF   0B           INC     R3
   \                     ??HalUARTReadDMA_3:
   \   0000F0   02....       LJMP    ??HalUARTReadDMA_0 & 0xFFFF
   \                     ??HalUARTReadDMA_1:
   \   0000F3   C285         CLR     0x80.5
   \   0000F5   7F03         MOV     R7,#0x3
   \   0000F7   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000FA                REQUIRE U0BAUD
   \   0000FA                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint16 HalUARTWriteDMA(uint8 *, uint16)
   \                     HalUARTWriteDMA:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   90....       MOV     DPTR,#dmaCfg + 1030
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   FA           MOV     R2,A
   \   00000E   7B00         MOV     R3,#0x0
   \   000010   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000012   2A           ADD     A,R2
   \   000013   F582         MOV     DPL,A
   \   000015   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000017   3B           ADDC    A,R3
   \   000018   F583         MOV     DPH,A
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   FA           MOV     R2,A
   \   00001C   7B00         MOV     R3,#0x0
   \   00001E   EC           MOV     A,R4
   \   00001F   2A           ADD     A,R2
   \   000020   FA           MOV     R2,A
   \   000021   ED           MOV     A,R5
   \   000022   3B           ADDC    A,R3
   \   000023   FB           MOV     R3,A
   \   000024   C3           CLR     C
   \   000025   EA           MOV     A,R2
   \   000026   9401         SUBB    A,#0x1
   \   000028   EB           MOV     A,R3
   \   000029   9401         SUBB    A,#0x1
   \   00002B   4007         JC      ??HalUARTWriteDMA_0
   \   00002D   7A00         MOV     R2,#0x0
   \   00002F   7B00         MOV     R3,#0x0
   \   000031   02....       LJMP    ??HalUARTWriteDMA_1 & 0xFFFF
   \                     ??HalUARTWriteDMA_0:
   \   000034   A2AF         MOV     C,0xa8.7
   \   000036   E4           CLR     A
   \   000037   33           RLC     A
   \   000038   F5..         MOV     ?V0,A
   \   00003A   C2AF         CLR     0xa8.7
   \   00003C   90....       MOV     DPTR,#dmaCfg + 1030
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   F5..         MOV     ?V2,A
   \   000042   AA..         MOV     R2,?V2
   \   000044   7B00         MOV     R3,#0x0
   \   000046   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000048   2A           ADD     A,R2
   \   000049   F582         MOV     DPL,A
   \   00004B   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   00004D   3B           ADDC    A,R3
   \   00004E   F583         MOV     DPH,A
   \   000050   E0           MOVX    A,@DPTR
   \   000051   F5..         MOV     ?V1,A
   \   000053   85....       MOV     ?V6,?V0
   \   000056   E5..         MOV     A,?V0
   \   000058   A2E0         MOV     C,0xE0 /* A   */.0
   \   00005A   92AF         MOV     0xa8.7,C
   \   00005C   7800         MOV     R0,#0x0
   \   00005E   7900         MOV     R1,#0x0
   \                     ??HalUARTWriteDMA_2:
   \   000060   C3           CLR     C
   \   000061   E8           MOV     A,R0
   \   000062   9C           SUBB    A,R4
   \   000063   E9           MOV     A,R1
   \   000064   9D           SUBB    A,R5
   \   000065   5050         JNC     ??HalUARTWriteDMA_3
   \   000067   EE           MOV     A,R6
   \   000068   28           ADD     A,R0
   \   000069   F582         MOV     DPL,A
   \   00006B   EF           MOV     A,R7
   \   00006C   39           ADDC    A,R1
   \   00006D   F583         MOV     DPH,A
   \   00006F   E0           MOVX    A,@DPTR
   \   000070   C0E0         PUSH    A
   \   000072   AA..         MOV     R2,?V2
   \   000074   7B00         MOV     R3,#0x0
   \   000076   EA           MOV     A,R2
   \   000077   75F000       MOV     B,#0x0
   \   00007A   A4           MUL     AB
   \   00007B   CA           XCH     A,R2
   \   00007C   85F0..       MOV     ?V3,B
   \   00007F   75F001       MOV     B,#0x1
   \   000082   A4           MUL     AB
   \   000083   25..         ADD     A,?V3
   \   000085   F5..         MOV     ?V3,A
   \   000087   75F000       MOV     B,#0x0
   \   00008A   EB           MOV     A,R3
   \   00008B   A4           MUL     AB
   \   00008C   25..         ADD     A,?V3
   \   00008E   FB           MOV     R3,A
   \   00008F   85....       MOV     ?V4,?V1
   \   000092   75..00       MOV     ?V5,#0x0
   \   000095   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000097   25..         ADD     A,?V4
   \   000099   F5..         MOV     ?V4,A
   \   00009B   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   00009D   35..         ADDC    A,?V5
   \   00009F   F5..         MOV     ?V5,A
   \   0000A1   E5..         MOV     A,?V4
   \   0000A3   2A           ADD     A,R2
   \   0000A4   F582         MOV     DPL,A
   \   0000A6   E5..         MOV     A,?V5
   \   0000A8   3B           ADDC    A,R3
   \   0000A9   F583         MOV     DPH,A
   \   0000AB   D0E0         POP     A
   \   0000AD   F0           MOVX    @DPTR,A
   \   0000AE   05..         INC     ?V1
   \   0000B0   08           INC     R0
   \   0000B1   E8           MOV     A,R0
   \   0000B2   70AC         JNZ     ??HalUARTWriteDMA_2
   \   0000B4   09           INC     R1
   \   0000B5   80A9         SJMP    ??HalUARTWriteDMA_2
   \                     ??HalUARTWriteDMA_3:
   \   0000B7   A2AF         MOV     C,0xa8.7
   \   0000B9   E4           CLR     A
   \   0000BA   33           RLC     A
   \   0000BB   F5..         MOV     ?V0,A
   \   0000BD   C2AF         CLR     0xa8.7
   \   0000BF   90....       MOV     DPTR,#dmaCfg + 1030
   \   0000C2   E0           MOVX    A,@DPTR
   \   0000C3   65..         XRL     A,?V2
   \   0000C5   607F         JZ      ??HalUARTWriteDMA_4
   \   0000C7   85....       MOV     ?V3,?V0
   \   0000CA   E5..         MOV     A,?V0
   \   0000CC   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000CE   92AF         MOV     0xa8.7,C
   \   0000D0   90....       MOV     DPTR,#dmaCfg + 1030
   \   0000D3   E0           MOVX    A,@DPTR
   \   0000D4   F5..         MOV     ?V2,A
   \   0000D6   AA..         MOV     R2,?V2
   \   0000D8   7B00         MOV     R3,#0x0
   \   0000DA   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   0000DC   2A           ADD     A,R2
   \   0000DD   F582         MOV     DPL,A
   \   0000DF   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   0000E1   3B           ADDC    A,R3
   \   0000E2   F583         MOV     DPH,A
   \   0000E4   E0           MOVX    A,@DPTR
   \   0000E5   F5..         MOV     ?V1,A
   \   0000E7   7800         MOV     R0,#0x0
   \   0000E9   7900         MOV     R1,#0x0
   \                     ??HalUARTWriteDMA_5:
   \   0000EB   C3           CLR     C
   \   0000EC   E8           MOV     A,R0
   \   0000ED   9C           SUBB    A,R4
   \   0000EE   E9           MOV     A,R1
   \   0000EF   9D           SUBB    A,R5
   \   0000F0   504C         JNC     ??HalUARTWriteDMA_6
   \   0000F2   EE           MOV     A,R6
   \   0000F3   28           ADD     A,R0
   \   0000F4   F582         MOV     DPL,A
   \   0000F6   EF           MOV     A,R7
   \   0000F7   39           ADDC    A,R1
   \   0000F8   F583         MOV     DPH,A
   \   0000FA   E0           MOVX    A,@DPTR
   \   0000FB   C0E0         PUSH    A
   \   0000FD   85....       MOV     ?V4,?V2
   \   000100   75..00       MOV     ?V5,#0x0
   \   000103   E5..         MOV     A,?V4
   \   000105   75F000       MOV     B,#0x0
   \   000108   A4           MUL     AB
   \   000109   C5..         XCH     A,?V4
   \   00010B   AAF0         MOV     R2,B
   \   00010D   75F001       MOV     B,#0x1
   \   000110   A4           MUL     AB
   \   000111   2A           ADD     A,R2
   \   000112   FA           MOV     R2,A
   \   000113   75F000       MOV     B,#0x0
   \   000116   E5..         MOV     A,?V5
   \   000118   A4           MUL     AB
   \   000119   2A           ADD     A,R2
   \   00011A   F5..         MOV     ?V5,A
   \   00011C   AA..         MOV     R2,?V1
   \   00011E   7B00         MOV     R3,#0x0
   \   000120   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000122   2A           ADD     A,R2
   \   000123   FA           MOV     R2,A
   \   000124   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   000126   3B           ADDC    A,R3
   \   000127   FB           MOV     R3,A
   \   000128   EA           MOV     A,R2
   \   000129   25..         ADD     A,?V4
   \   00012B   F582         MOV     DPL,A
   \   00012D   EB           MOV     A,R3
   \   00012E   35..         ADDC    A,?V5
   \   000130   F583         MOV     DPH,A
   \   000132   D0E0         POP     A
   \   000134   F0           MOVX    @DPTR,A
   \   000135   05..         INC     ?V1
   \   000137   08           INC     R0
   \   000138   E8           MOV     A,R0
   \   000139   70B0         JNZ     ??HalUARTWriteDMA_5
   \   00013B   09           INC     R1
   \   00013C   80AD         SJMP    ??HalUARTWriteDMA_5
   \                     ??HalUARTWriteDMA_6:
   \   00013E   A2AF         MOV     C,0xa8.7
   \   000140   E4           CLR     A
   \   000141   33           RLC     A
   \   000142   F5..         MOV     ?V0,A
   \   000144   C2AF         CLR     0xa8.7
   \                     ??HalUARTWriteDMA_4:
   \   000146   E5..         MOV     A,?V1
   \   000148   C0E0         PUSH    A
   \   00014A   AA..         MOV     R2,?V2
   \   00014C   7B00         MOV     R3,#0x0
   \   00014E   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000150   2A           ADD     A,R2
   \   000151   F582         MOV     DPL,A
   \   000153   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000155   3B           ADDC    A,R3
   \   000156   F583         MOV     DPH,A
   \   000158   D0E0         POP     A
   \   00015A   F0           MOVX    @DPTR,A
   \   00015B   7401         MOV     A,#0x1
   \   00015D   65..         XRL     A,?V2
   \   00015F   FA           MOV     R2,A
   \   000160   7B00         MOV     R3,#0x0
   \   000162   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000164   2A           ADD     A,R2
   \   000165   F582         MOV     DPL,A
   \   000167   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000169   3B           ADDC    A,R3
   \   00016A   F583         MOV     DPH,A
   \   00016C   E0           MOVX    A,@DPTR
   \   00016D   7006         JNZ     ??HalUARTWriteDMA_7
   \   00016F   90....       MOV     DPTR,#dmaCfg + 1035
   \   000172   7401         MOV     A,#0x1
   \   000174   F0           MOVX    @DPTR,A
   \                     ??HalUARTWriteDMA_7:
   \   000175   85....       MOV     ?V4,?V0
   \   000178   E5..         MOV     A,?V0
   \   00017A   A2E0         MOV     C,0xE0 /* A   */.0
   \   00017C   92AF         MOV     0xa8.7,C
   \   00017E   E8           MOV     A,R0
   \   00017F   FA           MOV     R2,A
   \   000180   E9           MOV     A,R1
   \   000181   FB           MOV     R3,A
   \                     ??HalUARTWriteDMA_1:
   \   000182   7F07         MOV     R7,#0x7
   \   000184   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000187                REQUIRE _A_IEN0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTPollDMA(void)
   \                     HalUARTPollDMA:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000   74F3         MOV     A,#-0xd
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 13
   \   000005                ; Auto size: 0
   \   000005   7E00         MOV     R6,#0x0
   \   000007   7F00         MOV     R7,#0x0
   \   000009   75..00       MOV     ?V0,#0x0
   \   00000C   E5C2         MOV     A,0xc2
   \   00000E   FA           MOV     R2,A
   \   00000F   7B00         MOV     R3,#0x0
   \   000011   90....       MOV     DPTR,#dmaCfg + 512
   \   000014   E0           MOVX    A,@DPTR
   \   000015   F8           MOV     R0,A
   \   000016   7900         MOV     R1,#0x0
   \   000018   E8           MOV     A,R0
   \   000019   75F002       MOV     B,#0x2
   \   00001C   A4           MUL     AB
   \   00001D   C8           XCH     A,R0
   \   00001E   ACF0         MOV     R4,B
   \   000020   75F000       MOV     B,#0x0
   \   000023   A4           MUL     AB
   \   000024   2C           ADD     A,R4
   \   000025   FC           MOV     R4,A
   \   000026   75F002       MOV     B,#0x2
   \   000029   E9           MOV     A,R1
   \   00002A   A4           MUL     AB
   \   00002B   2C           ADD     A,R4
   \   00002C   F9           MOV     R1,A
   \   00002D   74..         MOV     A,#dmaCfg & 0xff
   \   00002F   28           ADD     A,R0
   \   000030   F582         MOV     DPL,A
   \   000032   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000034   39           ADDC    A,R1
   \   000035   F583         MOV     DPH,A
   \   000037   E0           MOVX    A,@DPTR
   \   000038   F8           MOV     R0,A
   \   000039   A3           INC     DPTR
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   F9           MOV     R1,A
   \   00003C   E4           CLR     A
   \   00003D   C9           XCH     A,R1
   \   00003E   F8           MOV     R0,A
   \   00003F   E8           MOV     A,R0
   \   000040   6A           XRL     A,R2
   \   000041   7002         JNZ     ??HalUARTPollDMA_0
   \   000043   E9           MOV     A,R1
   \   000044   6B           XRL     A,R3
   \                     ??HalUARTPollDMA_0:
   \   000045   7064         JNZ     ??HalUARTPollDMA_1
   \   000047                ; Setup parameters for call to function findTail
   \   000047   12....       LCALL   `??findTail::?relay` ; Banked call to: findTail
   \   00004A   E9           MOV     A,R1
   \   00004B   F5..         MOV     ?V1,A
   \   00004D   90....       MOV     DPTR,#dmaCfg + 513
   \   000050   E0           MOVX    A,@DPTR
   \   000051   65..         XRL     A,?V1
   \   000053   601A         JZ      ??HalUARTPollDMA_2
   \   000055   E5..         MOV     A,?V1
   \   000057   90....       MOV     DPTR,#dmaCfg + 513
   \   00005A   F0           MOVX    @DPTR,A
   \   00005B   90....       MOV     DPTR,#dmaCfg + 514
   \   00005E   E0           MOVX    A,@DPTR
   \   00005F   7006         JNZ     ??HalUARTPollDMA_3
   \   000061   E595         MOV     A,0x95
   \   000063   90....       MOV     DPTR,#dmaCfg + 515
   \   000066   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_3:
   \   000067   90....       MOV     DPTR,#dmaCfg + 514
   \   00006A   7421         MOV     A,#0x21
   \   00006C   F0           MOVX    @DPTR,A
   \   00006D   802F         SJMP    ??HalUARTPollDMA_4
   \                     ??HalUARTPollDMA_2:
   \   00006F   90....       MOV     DPTR,#dmaCfg + 514
   \   000072   E0           MOVX    A,@DPTR
   \   000073   6029         JZ      ??HalUARTPollDMA_4
   \   000075   90....       MOV     DPTR,#dmaCfg + 515
   \   000078   E0           MOVX    A,@DPTR
   \   000079   F8           MOV     R0,A
   \   00007A   E595         MOV     A,0x95
   \   00007C   C3           CLR     C
   \   00007D   98           SUBB    A,R0
   \   00007E   F8           MOV     R0,A
   \   00007F   90....       MOV     DPTR,#dmaCfg + 514
   \   000082   E0           MOVX    A,@DPTR
   \   000083   F9           MOV     R1,A
   \   000084   E8           MOV     A,R0
   \   000085   C3           CLR     C
   \   000086   99           SUBB    A,R1
   \   000087   500F         JNC     ??HalUARTPollDMA_5
   \   000089   90....       MOV     DPTR,#dmaCfg + 514
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   C3           CLR     C
   \   00008E   98           SUBB    A,R0
   \   00008F   F0           MOVX    @DPTR,A
   \   000090   E595         MOV     A,0x95
   \   000092   90....       MOV     DPTR,#dmaCfg + 515
   \   000095   F0           MOVX    @DPTR,A
   \   000096   8006         SJMP    ??HalUARTPollDMA_4
   \                     ??HalUARTPollDMA_5:
   \   000098   90....       MOV     DPTR,#dmaCfg + 514
   \   00009B   7400         MOV     A,#0x0
   \   00009D   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_4:
   \   00009E                ; Setup parameters for call to function HalUARTRxAvailDMA
   \   00009E   12....       LCALL   `??HalUARTRxAvailDMA::?relay`; Banked call to: HalUARTRxAvailDMA
   \   0000A1   8A..         MOV     ?V2,R2
   \   0000A3   8B..         MOV     ?V3,R3
   \   0000A5   AE..         MOV     R6,?V2
   \   0000A7   AF..         MOV     R7,?V3
   \   0000A9   8006         SJMP    ??HalUARTPollDMA_6
   \                     ??HalUARTPollDMA_1:
   \   0000AB   90....       MOV     DPTR,#dmaCfg + 514
   \   0000AE   7400         MOV     A,#0x0
   \   0000B0   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_6:
   \   0000B1   C3           CLR     C
   \   0000B2   EE           MOV     A,R6
   \   0000B3   94F0         SUBB    A,#-0x10
   \   0000B5   EF           MOV     A,R7
   \   0000B6   9400         SUBB    A,#0x0
   \   0000B8   4005         JC      ??HalUARTPollDMA_7
   \   0000BA   75..01       MOV     ?V0,#0x1
   \   0000BD   801D         SJMP    ??HalUARTPollDMA_8
   \                     ??HalUARTPollDMA_7:
   \   0000BF   C3           CLR     C
   \   0000C0   EE           MOV     A,R6
   \   0000C1   9470         SUBB    A,#0x70
   \   0000C3   EF           MOV     A,R7
   \   0000C4   9400         SUBB    A,#0x0
   \   0000C6   4007         JC      ??HalUARTPollDMA_9
   \   0000C8   75..02       MOV     ?V0,#0x2
   \   0000CB   D285         SETB    0x80.5
   \   0000CD   800D         SJMP    ??HalUARTPollDMA_8
   \                     ??HalUARTPollDMA_9:
   \   0000CF   EE           MOV     A,R6
   \   0000D0   4F           ORL     A,R7
   \   0000D1   6009         JZ      ??HalUARTPollDMA_8
   \   0000D3   90....       MOV     DPTR,#dmaCfg + 514
   \   0000D6   E0           MOVX    A,@DPTR
   \   0000D7   7003         JNZ     ??HalUARTPollDMA_8
   \   0000D9   75..04       MOV     ?V0,#0x4
   \                     ??HalUARTPollDMA_8:
   \   0000DC   90....       MOV     DPTR,#dmaCfg + 1031
   \   0000DF   E0           MOVX    A,@DPTR
   \   0000E0   600D         JZ      ??HalUARTPollDMA_10
   \   0000E2   90....       MOV     DPTR,#dmaCfg + 1031
   \   0000E5   7400         MOV     A,#0x0
   \   0000E7   F0           MOVX    @DPTR,A
   \   0000E8   D3           SETB    C
   \   0000E9   E5..         MOV     A,?V0
   \   0000EB   92E4         MOV     0xE0 /* A   */.4,C
   \   0000ED   F5..         MOV     ?V0,A
   \                     ??HalUARTPollDMA_10:
   \   0000EF   90....       MOV     DPTR,#dmaCfg + 1034
   \   0000F2   E0           MOVX    A,@DPTR
   \   0000F3   6018         JZ      ??HalUARTPollDMA_11
   \   0000F5   A895         MOV     R0,0x95+0x0
   \   0000F7   90....       MOV     DPTR,#dmaCfg + 1033
   \   0000FA   E0           MOVX    A,@DPTR
   \   0000FB   C8           XCH     A,R0
   \   0000FC   C3           CLR     C
   \   0000FD   98           SUBB    A,R0
   \   0000FE   F8           MOV     R0,A
   \   0000FF   90....       MOV     DPTR,#dmaCfg + 1032
   \   000102   E0           MOVX    A,@DPTR
   \   000103   C3           CLR     C
   \   000104   98           SUBB    A,R0
   \   000105   5006         JNC     ??HalUARTPollDMA_11
   \   000107   90....       MOV     DPTR,#dmaCfg + 1034
   \   00010A   7400         MOV     A,#0x0
   \   00010C   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_11:
   \   00010D   90....       MOV     DPTR,#dmaCfg + 1035
   \   000110   E0           MOVX    A,@DPTR
   \   000111   7003         JNZ     $+5
   \   000113   02....       LJMP    ??HalUARTPollDMA_12 & 0xFFFF
   \   000116   90....       MOV     DPTR,#dmaCfg + 1034
   \   000119   E0           MOVX    A,@DPTR
   \   00011A   6003         JZ      $+5
   \   00011C   02....       LJMP    ??HalUARTPollDMA_12 & 0xFFFF
   \   00011F   7C..         MOV     R4,#(dmaCh1234 + 24) & 0xff
   \   000121   7D..         MOV     R5,#((dmaCh1234 + 24) >> 8) & 0xff
   \   000123   90....       MOV     DPTR,#dmaCfg + 1035
   \   000126   7400         MOV     A,#0x0
   \   000128   F0           MOVX    @DPTR,A
   \   000129   90....       MOV     DPTR,#dmaCfg + 1030
   \   00012C   E0           MOVX    A,@DPTR
   \   00012D   F8           MOV     R0,A
   \   00012E   7900         MOV     R1,#0x0
   \   000130   E8           MOV     A,R0
   \   000131   75F000       MOV     B,#0x0
   \   000134   A4           MUL     AB
   \   000135   C8           XCH     A,R0
   \   000136   ABF0         MOV     R3,B
   \   000138   75F001       MOV     B,#0x1
   \   00013B   A4           MUL     AB
   \   00013C   2B           ADD     A,R3
   \   00013D   FB           MOV     R3,A
   \   00013E   75F000       MOV     B,#0x0
   \   000141   E9           MOV     A,R1
   \   000142   A4           MUL     AB
   \   000143   2B           ADD     A,R3
   \   000144   F9           MOV     R1,A
   \   000145   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000147   28           ADD     A,R0
   \   000148   F8           MOV     R0,A
   \   000149   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   00014B   39           ADDC    A,R1
   \   00014C   F9           MOV     R1,A
   \   00014D   E4           CLR     A
   \   00014E   C9           XCH     A,R1
   \   00014F   F8           MOV     R0,A
   \   000150   E8           MOV     A,R0
   \   000151   C0E0         PUSH    A
   \   000153   8C82         MOV     DPL,R4
   \   000155   8D83         MOV     DPH,R5
   \   000157   D0E0         POP     A
   \   000159   F0           MOVX    @DPTR,A
   \   00015A   90....       MOV     DPTR,#dmaCfg + 1030
   \   00015D   E0           MOVX    A,@DPTR
   \   00015E   F8           MOV     R0,A
   \   00015F   7900         MOV     R1,#0x0
   \   000161   E8           MOV     A,R0
   \   000162   75F000       MOV     B,#0x0
   \   000165   A4           MUL     AB
   \   000166   C8           XCH     A,R0
   \   000167   ABF0         MOV     R3,B
   \   000169   75F001       MOV     B,#0x1
   \   00016C   A4           MUL     AB
   \   00016D   2B           ADD     A,R3
   \   00016E   FB           MOV     R3,A
   \   00016F   75F000       MOV     B,#0x0
   \   000172   E9           MOV     A,R1
   \   000173   A4           MUL     AB
   \   000174   2B           ADD     A,R3
   \   000175   F9           MOV     R1,A
   \   000176   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000178   28           ADD     A,R0
   \   000179   F8           MOV     R0,A
   \   00017A   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   00017C   39           ADDC    A,R1
   \   00017D   F9           MOV     R1,A
   \   00017E   E8           MOV     A,R0
   \   00017F   C0E0         PUSH    A
   \   000181   8C82         MOV     DPL,R4
   \   000183   8D83         MOV     DPH,R5
   \   000185   A3           INC     DPTR
   \   000186   D0E0         POP     A
   \   000188   F0           MOVX    @DPTR,A
   \   000189   90....       MOV     DPTR,#dmaCfg + 1030
   \   00018C   E0           MOVX    A,@DPTR
   \   00018D   F8           MOV     R0,A
   \   00018E   7900         MOV     R1,#0x0
   \   000190   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000192   28           ADD     A,R0
   \   000193   F582         MOV     DPL,A
   \   000195   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000197   39           ADDC    A,R1
   \   000198   F583         MOV     DPH,A
   \   00019A   E0           MOVX    A,@DPTR
   \   00019B   C0E0         PUSH    A
   \   00019D   8C82         MOV     DPL,R4
   \   00019F   8D83         MOV     DPH,R5
   \   0001A1   A3           INC     DPTR
   \   0001A2   A3           INC     DPTR
   \   0001A3   A3           INC     DPTR
   \   0001A4   A3           INC     DPTR
   \   0001A5   A3           INC     DPTR
   \   0001A6   D0E0         POP     A
   \   0001A8   F0           MOVX    @DPTR,A
   \   0001A9   8C82         MOV     DPL,R4
   \   0001AB   8D83         MOV     DPH,R5
   \   0001AD   A3           INC     DPTR
   \   0001AE   A3           INC     DPTR
   \   0001AF   A3           INC     DPTR
   \   0001B0   A3           INC     DPTR
   \   0001B1   E0           MOVX    A,@DPTR
   \   0001B2   54E0         ANL     A,#0xe0
   \   0001B4   F0           MOVX    @DPTR,A
   \   0001B5   90....       MOV     DPTR,#dmaCfg + 1030
   \   0001B8   E0           MOVX    A,@DPTR
   \   0001B9   F8           MOV     R0,A
   \   0001BA   8C82         MOV     DPL,R4
   \   0001BC   8D83         MOV     DPH,R5
   \   0001BE   A3           INC     DPTR
   \   0001BF   A3           INC     DPTR
   \   0001C0   A3           INC     DPTR
   \   0001C1   A3           INC     DPTR
   \   0001C2   E0           MOVX    A,@DPTR
   \   0001C3   C0E0         PUSH    A
   \   0001C5   8C82         MOV     DPL,R4
   \   0001C7   8D83         MOV     DPH,R5
   \   0001C9   A3           INC     DPTR
   \   0001CA   A3           INC     DPTR
   \   0001CB   A3           INC     DPTR
   \   0001CC   A3           INC     DPTR
   \   0001CD   D0E0         POP     A
   \   0001CF   F0           MOVX    @DPTR,A
   \   0001D0   90....       MOV     DPTR,#dmaCfg + 1030
   \   0001D3   E0           MOVX    A,@DPTR
   \   0001D4   6401         XRL     A,#0x1
   \   0001D6   F0           MOVX    @DPTR,A
   \   0001D7   A2AF         MOV     C,0xa8.7
   \   0001D9   E4           CLR     A
   \   0001DA   33           RLC     A
   \   0001DB   FA           MOV     R2,A
   \   0001DC   C2AF         CLR     0xa8.7
   \   0001DE   75D610       MOV     0xd6,#0x10
   \                     ??HalUARTPollDMA_13:
   \   0001E1   00           NOP
   \   0001E2   E5D6         MOV     A,0xd6
   \   0001E4   A2E4         MOV     C,0xE0 /* A   */.4
   \   0001E6   50F9         JNC     ??HalUARTPollDMA_13
   \   0001E8   75D1EF       MOV     0xd1,#-0x11
   \   0001EB   75D710       MOV     0xd7,#0x10
   \   0001EE   8A..         MOV     ?V1,R2
   \   0001F0   EA           MOV     A,R2
   \   0001F1   A2E0         MOV     C,0xE0 /* A   */.0
   \   0001F3   92AF         MOV     0xa8.7,C
   \   0001F5   803F         SJMP    ??HalUARTPollDMA_14
   \                     ??HalUARTPollDMA_12:
   \   0001F7   A2AF         MOV     C,0xa8.7
   \   0001F9   E4           CLR     A
   \   0001FA   33           RLC     A
   \   0001FB   F5..         MOV     ?V4,A
   \   0001FD   C2AF         CLR     0xa8.7
   \   0001FF   90....       MOV     DPTR,#dmaCfg + 1030
   \   000202   E0           MOVX    A,@DPTR
   \   000203   F8           MOV     R0,A
   \   000204   7900         MOV     R1,#0x0
   \   000206   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000208   28           ADD     A,R0
   \   000209   F582         MOV     DPL,A
   \   00020B   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   00020D   39           ADDC    A,R1
   \   00020E   F583         MOV     DPH,A
   \   000210   E0           MOVX    A,@DPTR
   \   000211   601A         JZ      ??HalUARTPollDMA_15
   \   000213   E5D6         MOV     A,0xd6
   \   000215   A2E4         MOV     C,0xE0 /* A   */.4
   \   000217   4014         JC      ??HalUARTPollDMA_15
   \   000219   E5D1         MOV     A,0xd1
   \   00021B   A2E4         MOV     C,0xE0 /* A   */.4
   \   00021D   400E         JC      ??HalUARTPollDMA_15
   \   00021F   85....       MOV     ?V2,?V4
   \   000222   E5..         MOV     A,?V4
   \   000224   A2E0         MOV     C,0xE0 /* A   */.0
   \   000226   92AF         MOV     0xa8.7,C
   \   000228                ; Setup parameters for call to function HalUARTIsrDMA
   \   000228   12....       LCALL   `??HalUARTIsrDMA::?relay`; Banked call to: HalUARTIsrDMA
   \   00022B   8009         SJMP    ??HalUARTPollDMA_14
   \                     ??HalUARTPollDMA_15:
   \   00022D   85....       MOV     ?V3,?V4
   \   000230   E5..         MOV     A,?V4
   \   000232   A2E0         MOV     C,0xE0 /* A   */.0
   \   000234   92AF         MOV     0xa8.7,C
   \                     ??HalUARTPollDMA_14:
   \   000236   E5..         MOV     A,?V0
   \   000238   601E         JZ      ??HalUARTPollDMA_16
   \   00023A   90....       MOV     DPTR,#dmaCfg + 1036
   \   00023D   E0           MOVX    A,@DPTR
   \   00023E   F8           MOV     R0,A
   \   00023F   A3           INC     DPTR
   \   000240   E0           MOVX    A,@DPTR
   \   000241   F9           MOV     R1,A
   \   000242   E8           MOV     A,R0
   \   000243   49           ORL     A,R1
   \   000244   6012         JZ      ??HalUARTPollDMA_16
   \   000246                ; Setup parameters for indirect call
   \   000246   AA..         MOV     R2,?V0
   \   000248   7900         MOV     R1,#0x0
   \   00024A   90....       MOV     DPTR,#dmaCfg + 1036
   \   00024D   E0           MOVX    A,@DPTR
   \   00024E   F8           MOV     R0,A
   \   00024F   A3           INC     DPTR
   \   000250   E0           MOVX    A,@DPTR
   \   000251   F583         MOV     DPH,A
   \   000253   8882         MOV     DPL,R0
   \   000255   12....       LCALL   ?CALL_IND
   \                     ??HalUARTPollDMA_16:
   \   000258   7F05         MOV     R7,#0x5
   \   00025A   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00025D                REQUIRE U0BAUD
   \   00025D                REQUIRE ST0
   \   00025D                REQUIRE _A_P0
   \   00025D                REQUIRE _A_IEN0
   \   00025D                REQUIRE DMAARM
   \   00025D                REQUIRE DMAIRQ
   \   00025D                REQUIRE DMAREQ

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint16 HalUARTRxAvailDMA(void)
   \                     HalUARTRxAvailDMA:
   \   000000                REQUIRE ?V0
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   7A00         MOV     R2,#0x0
   \   000007   7B00         MOV     R3,#0x0
   \   000009   E5C2         MOV     A,0xc2
   \   00000B   FC           MOV     R4,A
   \   00000C   7D00         MOV     R5,#0x0
   \   00000E   90....       MOV     DPTR,#dmaCfg + 512
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F8           MOV     R0,A
   \   000013   7900         MOV     R1,#0x0
   \   000015   E8           MOV     A,R0
   \   000016   75F002       MOV     B,#0x2
   \   000019   A4           MUL     AB
   \   00001A   C8           XCH     A,R0
   \   00001B   AEF0         MOV     R6,B
   \   00001D   75F000       MOV     B,#0x0
   \   000020   A4           MUL     AB
   \   000021   2E           ADD     A,R6
   \   000022   FE           MOV     R6,A
   \   000023   75F002       MOV     B,#0x2
   \   000026   E9           MOV     A,R1
   \   000027   A4           MUL     AB
   \   000028   2E           ADD     A,R6
   \   000029   F9           MOV     R1,A
   \   00002A   74..         MOV     A,#dmaCfg & 0xff
   \   00002C   28           ADD     A,R0
   \   00002D   F582         MOV     DPL,A
   \   00002F   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000031   39           ADDC    A,R1
   \   000032   F583         MOV     DPH,A
   \   000034   E0           MOVX    A,@DPTR
   \   000035   F8           MOV     R0,A
   \   000036   A3           INC     DPTR
   \   000037   E0           MOVX    A,@DPTR
   \   000038   F9           MOV     R1,A
   \   000039   E4           CLR     A
   \   00003A   C9           XCH     A,R1
   \   00003B   F8           MOV     R0,A
   \   00003C   E8           MOV     A,R0
   \   00003D   6C           XRL     A,R4
   \   00003E   7002         JNZ     ??HalUARTRxAvailDMA_0
   \   000040   E9           MOV     A,R1
   \   000041   6D           XRL     A,R5
   \                     ??HalUARTRxAvailDMA_0:
   \   000042   7055         JNZ     ??HalUARTRxAvailDMA_1
   \   000044   7800         MOV     R0,#0x0
   \   000046   7900         MOV     R1,#0x0
   \                     ??HalUARTRxAvailDMA_2:
   \   000048   C3           CLR     C
   \   000049   E8           MOV     A,R0
   \   00004A   9400         SUBB    A,#0x0
   \   00004C   E9           MOV     A,R1
   \   00004D   9401         SUBB    A,#0x1
   \   00004F   5048         JNC     ??HalUARTRxAvailDMA_1
   \   000051   E5C2         MOV     A,0xc2
   \   000053   FE           MOV     R6,A
   \   000054   7F00         MOV     R7,#0x0
   \   000056   E8           MOV     A,R0
   \   000057   FC           MOV     R4,A
   \   000058   E9           MOV     A,R1
   \   000059   FD           MOV     R5,A
   \   00005A   EC           MOV     A,R4
   \   00005B   75F002       MOV     B,#0x2
   \   00005E   A4           MUL     AB
   \   00005F   CC           XCH     A,R4
   \   000060   85F0..       MOV     ?V0,B
   \   000063   75F000       MOV     B,#0x0
   \   000066   A4           MUL     AB
   \   000067   25..         ADD     A,?V0
   \   000069   F5..         MOV     ?V0,A
   \   00006B   75F002       MOV     B,#0x2
   \   00006E   ED           MOV     A,R5
   \   00006F   A4           MUL     AB
   \   000070   25..         ADD     A,?V0
   \   000072   FD           MOV     R5,A
   \   000073   74..         MOV     A,#dmaCfg & 0xff
   \   000075   2C           ADD     A,R4
   \   000076   F582         MOV     DPL,A
   \   000078   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   00007A   3D           ADDC    A,R5
   \   00007B   F583         MOV     DPH,A
   \   00007D   E0           MOVX    A,@DPTR
   \   00007E   FC           MOV     R4,A
   \   00007F   A3           INC     DPTR
   \   000080   E0           MOVX    A,@DPTR
   \   000081   FD           MOV     R5,A
   \   000082   E4           CLR     A
   \   000083   CD           XCH     A,R5
   \   000084   FC           MOV     R4,A
   \   000085   EC           MOV     A,R4
   \   000086   6E           XRL     A,R6
   \   000087   7002         JNZ     ??HalUARTRxAvailDMA_3
   \   000089   ED           MOV     A,R5
   \   00008A   6F           XRL     A,R7
   \                     ??HalUARTRxAvailDMA_3:
   \   00008B   7005         JNZ     ??HalUARTRxAvailDMA_4
   \   00008D   0A           INC     R2
   \   00008E   EA           MOV     A,R2
   \   00008F   7001         JNZ     ??HalUARTRxAvailDMA_4
   \   000091   0B           INC     R3
   \                     ??HalUARTRxAvailDMA_4:
   \   000092   08           INC     R0
   \   000093   E8           MOV     A,R0
   \   000094   70B2         JNZ     ??HalUARTRxAvailDMA_2
   \   000096   09           INC     R1
   \   000097   80AF         SJMP    ??HalUARTRxAvailDMA_2
   \                     ??HalUARTRxAvailDMA_1:
   \   000099   7F01         MOV     R7,#0x1
   \   00009B   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00009E                REQUIRE U0BAUD

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTSuspendDMA(void)
   \                     HalUARTSuspendDMA:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   D285         SETB    0x80.5
   \   000002   5386BF       ANL     0x86,#0xbf
   \   000005   43AB10       ORL     0xab,#0x10
   \   000008   02....       LJMP    ?BRET
   \   00000B                REQUIRE _A_P0
   \   00000B                REQUIRE U0CSR
   \   00000B                REQUIRE P0IEN

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTResumeDMA(void)
   \                     HalUARTResumeDMA:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   53ABEF       ANL     0xab,#0xef
   \   000003   43C480       ORL     0xc4,#0x80
   \   000006   438640       ORL     0x86,#0x40
   \   000009   C285         CLR     0x80.5
   \   00000B   02....       LJMP    ?BRET
   \   00000E                REQUIRE P0IEN
   \   00000E                REQUIRE U0UCR
   \   00000E                REQUIRE U0CSR
   \   00000E                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   __banked_func __xdata_reentrant void HalUARTIsrDMA(void)
   \                     HalUARTIsrDMA:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   75D1EF       MOV     0xd1,#-0x11
   \   000007   90....       MOV     DPTR,#dmaCfg + 1030
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6401         XRL     A,#0x1
   \   00000D   F8           MOV     R0,A
   \   00000E   7900         MOV     R1,#0x0
   \   000010   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000012   28           ADD     A,R0
   \   000013   F582         MOV     DPL,A
   \   000015   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000017   39           ADDC    A,R1
   \   000018   F583         MOV     DPH,A
   \   00001A   7400         MOV     A,#0x0
   \   00001C   F0           MOVX    @DPTR,A
   \   00001D   90....       MOV     DPTR,#dmaCfg + 1031
   \   000020   7401         MOV     A,#0x1
   \   000022   F0           MOVX    @DPTR,A
   \   000023   E595         MOV     A,0x95
   \   000025   90....       MOV     DPTR,#dmaCfg + 1033
   \   000028   F0           MOVX    @DPTR,A
   \   000029   90....       MOV     DPTR,#dmaCfg + 1034
   \   00002C   7401         MOV     A,#0x1
   \   00002E   F0           MOVX    @DPTR,A
   \   00002F   90....       MOV     DPTR,#dmaCfg + 1030
   \   000032   E0           MOVX    A,@DPTR
   \   000033   F8           MOV     R0,A
   \   000034   7900         MOV     R1,#0x0
   \   000036   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000038   28           ADD     A,R0
   \   000039   F582         MOV     DPL,A
   \   00003B   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   00003D   39           ADDC    A,R1
   \   00003E   F583         MOV     DPH,A
   \   000040   E0           MOVX    A,@DPTR
   \   000041   6006         JZ      ??HalUARTIsrDMA_0
   \   000043   90....       MOV     DPTR,#dmaCfg + 1035
   \   000046   7401         MOV     A,#0x1
   \   000048   F0           MOVX    @DPTR,A
   \                     ??HalUARTIsrDMA_0:
   \   000049   D083         POP     DPH
   \   00004B   D082         POP     DPL
   \   00004D   02....       LJMP    ?BRET
   \   000050                REQUIRE DMAIRQ
   \   000050                REQUIRE ST0
     79          #endif
     80          #if HAL_UART_ISR
     81          #include "_hal_uart_isr.c"
     82          #endif
     83          #if HAL_UART_USB
     84          #include "_hal_uart_usb.c"
     85          #endif
     86          
     87          /******************************************************************************
     88           * @fn      HalUARTInit
     89           *
     90           * @brief   Initialize the UART
     91           *
     92           * @param   none
     93           *
     94           * @return  none
     95           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     96          void HalUARTInit(void)
   \                     HalUARTInit:
     97          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     98          #if HAL_UART_DMA
     99            HalUARTInitDMA();
   \   000004                ; Setup parameters for call to function HalUARTInitDMA
   \   000004   12....       LCALL   `??HalUARTInitDMA::?relay`; Banked call to: HalUARTInitDMA
    100          #endif
    101          #if HAL_UART_ISR
    102            HalUARTInitISR();
    103          #endif
    104          #if HAL_UART_USB
    105            HalUARTInitUSB();
    106          #endif
    107          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    108          
    109          /******************************************************************************
    110           * @fn      HalUARTOpen
    111           *
    112           * @brief   Open a port according tp the configuration specified by parameter.
    113           *
    114           * @param   port   - UART port
    115           *          config - contains configuration information
    116           *
    117           * @return  Status of the function call
    118           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    119          uint8 HalUARTOpen(uint8 port, halUARTCfg_t *config)
   \                     HalUARTOpen:
    120          {
   \   000000                REQUIRE ?V0
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0,R1
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
   \   000009   EB           MOV     A,R3
   \   00000A   FF           MOV     R7,A
    121            (void)port;
    122            (void)config;
    123          
    124          #if (HAL_UART_DMA == 1)
    125            if (port == HAL_UART_PORT_0)  HalUARTOpenDMA(config);
   \   00000B   E5..         MOV     A,?V0
   \   00000D   7007         JNZ     ??HalUARTOpen_0
   \   00000F                ; Setup parameters for call to function HalUARTOpenDMA
   \   00000F   EE           MOV     A,R6
   \   000010   FA           MOV     R2,A
   \   000011   EF           MOV     A,R7
   \   000012   FB           MOV     R3,A
   \   000013   12....       LCALL   `??HalUARTOpenDMA::?relay`; Banked call to: HalUARTOpenDMA
    126          #endif
    127          #if (HAL_UART_DMA == 2)
    128            if (port == HAL_UART_PORT_1)  HalUARTOpenDMA(config);
    129          #endif
    130          #if (HAL_UART_ISR == 1)
    131            if (port == HAL_UART_PORT_0)  HalUARTOpenISR(config);
    132          #endif
    133          #if (HAL_UART_ISR == 2)
    134            if (port == HAL_UART_PORT_1)  HalUARTOpenISR(config);
    135          #endif
    136          #if (HAL_UART_USB)
    137            HalUARTOpenUSB(config);
    138          #endif
    139            
    140            return HAL_UART_SUCCESS;
   \                     ??HalUARTOpen_0:
   \   000016   7900         MOV     R1,#0x0
   \   000018   7F01         MOV     R7,#0x1
   \   00001A   02....       LJMP    ?BANKED_LEAVE_XDATA
    141          }
    142          
    143          /*****************************************************************************
    144           * @fn      HalUARTRead
    145           *
    146           * @brief   Read a buffer from the UART
    147           *
    148           * @param   port - USART module designation
    149           *          buf  - valid data buffer at least 'len' bytes in size
    150           *          len  - max length number of bytes to copy to 'buf'
    151           *
    152           * @return  length of buffer that was read
    153           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    154          uint16 HalUARTRead(uint8 port, uint8 *buf, uint16 len)
   \                     HalUARTRead:
    155          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V2,R1
   \   000007   8A..         MOV     ?V0,R2
   \   000009   8B..         MOV     ?V1,R3
   \   00000B   EC           MOV     A,R4
   \   00000C   FE           MOV     R6,A
   \   00000D   ED           MOV     A,R5
   \   00000E   FF           MOV     R7,A
    156            (void)port;
    157            (void)buf;
    158            (void)len;
    159          
    160          #if (HAL_UART_DMA == 1)
    161            if (port == HAL_UART_PORT_0)  return HalUARTReadDMA(buf, len);
   \   00000F   E5..         MOV     A,?V2
   \   000011   700D         JNZ     ??HalUARTRead_0
   \   000013                ; Setup parameters for call to function HalUARTReadDMA
   \   000013   EE           MOV     A,R6
   \   000014   FC           MOV     R4,A
   \   000015   EF           MOV     A,R7
   \   000016   FD           MOV     R5,A
   \   000017   AA..         MOV     R2,?V0
   \   000019   AB..         MOV     R3,?V1
   \   00001B   12....       LCALL   `??HalUARTReadDMA::?relay`; Banked call to: HalUARTReadDMA
   \   00001E   8004         SJMP    ??HalUARTRead_1
    162          #endif
    163          #if (HAL_UART_DMA == 2)
    164            if (port == HAL_UART_PORT_1)  return HalUARTReadDMA(buf, len);
    165          #endif
    166          #if (HAL_UART_ISR == 1)
    167            if (port == HAL_UART_PORT_0)  return HalUARTReadISR(buf, len);
    168          #endif
    169          #if (HAL_UART_ISR == 2)
    170            if (port == HAL_UART_PORT_1)  return HalUARTReadISR(buf, len);
    171          #endif
    172          
    173          #if HAL_UART_USB
    174            return HalUARTRx(buf, len);
    175          #else
    176            return 0;
   \                     ??HalUARTRead_0:
   \   000020   7A00         MOV     R2,#0x0
   \   000022   7B00         MOV     R3,#0x0
   \                     ??HalUARTRead_1:
   \   000024   7F03         MOV     R7,#0x3
   \   000026   02....       LJMP    ?BANKED_LEAVE_XDATA
    177          #endif
    178          }
    179          
    180          /******************************************************************************
    181           * @fn      HalUARTWrite
    182           *
    183           * @brief   Write a buffer to the UART.
    184           *
    185           * @param   port - UART port
    186           *          buf  - pointer to the buffer that will be written, not freed
    187           *          len  - length of
    188           *
    189           * @return  length of the buffer that was sent
    190           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    191          uint16 HalUARTWrite(uint8 port, uint8 *buf, uint16 len)
   \                     HalUARTWrite:
    192          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V2,R1
   \   000007   8A..         MOV     ?V0,R2
   \   000009   8B..         MOV     ?V1,R3
   \   00000B   EC           MOV     A,R4
   \   00000C   FE           MOV     R6,A
   \   00000D   ED           MOV     A,R5
   \   00000E   FF           MOV     R7,A
    193            (void)port;
    194            (void)buf;
    195            (void)len;
    196          
    197          #if (HAL_UART_DMA == 1)
    198            if (port == HAL_UART_PORT_0)  return HalUARTWriteDMA(buf, len);
   \   00000F   E5..         MOV     A,?V2
   \   000011   700D         JNZ     ??HalUARTWrite_0
   \   000013                ; Setup parameters for call to function HalUARTWriteDMA
   \   000013   EE           MOV     A,R6
   \   000014   FC           MOV     R4,A
   \   000015   EF           MOV     A,R7
   \   000016   FD           MOV     R5,A
   \   000017   AA..         MOV     R2,?V0
   \   000019   AB..         MOV     R3,?V1
   \   00001B   12....       LCALL   `??HalUARTWriteDMA::?relay`; Banked call to: HalUARTWriteDMA
   \   00001E   8004         SJMP    ??HalUARTWrite_1
    199          #endif
    200          #if (HAL_UART_DMA == 2)
    201            if (port == HAL_UART_PORT_1)  return HalUARTWriteDMA(buf, len);
    202          #endif
    203          #if (HAL_UART_ISR == 1)
    204            if (port == HAL_UART_PORT_0)  return HalUARTWriteISR(buf, len);
    205          #endif
    206          #if (HAL_UART_ISR == 2)
    207            if (port == HAL_UART_PORT_1)  return HalUARTWriteISR(buf, len);
    208          #endif
    209          
    210          #if HAL_UART_USB
    211            HalUARTTx(buf, len);
    212            return len;
    213          #else
    214            return 0;
   \                     ??HalUARTWrite_0:
   \   000020   7A00         MOV     R2,#0x0
   \   000022   7B00         MOV     R3,#0x0
   \                     ??HalUARTWrite_1:
   \   000024   7F03         MOV     R7,#0x3
   \   000026   02....       LJMP    ?BANKED_LEAVE_XDATA
    215          #endif
    216          }
    217          
    218          /******************************************************************************
    219           * @fn      HalUARTSuspend
    220           *
    221           * @brief   Suspend UART hardware before entering PM mode 1, 2 or 3.
    222           *
    223           * @param   None
    224           *
    225           * @return  None
    226           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    227          void HalUARTSuspend( void )
   \                     HalUARTSuspend:
    228          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    229          #if HAL_UART_DMA
    230            HalUARTSuspendDMA();
   \   000004                ; Setup parameters for call to function HalUARTSuspendDMA
   \   000004   12....       LCALL   `??HalUARTSuspendDMA::?relay`; Banked call to: HalUARTSuspendDMA
    231          #endif
    232          #if HAL_UART_ISR
    233            HalUARTSuspendISR();
    234          #endif
    235          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    236          
    237          /******************************************************************************
    238           * @fn      HalUARTResume
    239           *
    240           * @brief   Resume UART hardware after exiting PM mode 1, 2 or 3.
    241           *
    242           * @param   None
    243           *
    244           * @return  None
    245           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    246          void HalUARTResume( void )
   \                     HalUARTResume:
    247          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    248          #if HAL_UART_DMA
    249            HalUARTResumeDMA();
   \   000004                ; Setup parameters for call to function HalUARTResumeDMA
   \   000004   12....       LCALL   `??HalUARTResumeDMA::?relay`; Banked call to: HalUARTResumeDMA
    250          #endif
    251          #if HAL_UART_ISR
    252            HalUARTResumeISR();
    253          #endif
    254          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    255          
    256          /***************************************************************************************************
    257           * @fn      HalUARTPoll
    258           *
    259           * @brief   Poll the UART.
    260           *
    261           * @param   none
    262           *
    263           * @return  none
    264           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    265          void HalUARTPoll(void)
   \                     HalUARTPoll:
    266          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    267          #if HAL_UART_DMA
    268            HalUARTPollDMA();
   \   000004                ; Setup parameters for call to function HalUARTPollDMA
   \   000004   12....       LCALL   `??HalUARTPollDMA::?relay`; Banked call to: HalUARTPollDMA
    269          #endif
    270          #if HAL_UART_ISR
    271            HalUARTPollISR();
    272          #endif
    273          #if HAL_UART_USB
    274            HalUARTPollUSB();
    275          #endif
    276          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    277          
    278          /**************************************************************************************************
    279           * @fn      Hal_UART_RxBufLen()
    280           *
    281           * @brief   Calculate Rx Buffer length - the number of bytes in the buffer.
    282           *
    283           * @param   port - UART port
    284           *
    285           * @return  length of current Rx Buffer
    286           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    287          uint16 Hal_UART_RxBufLen( uint8 port )
   \                     Hal_UART_RxBufLen:
    288          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    289            (void)port;
    290          
    291          #if (HAL_UART_DMA == 1)
    292            if (port == HAL_UART_PORT_0)  return HalUARTRxAvailDMA();
   \   000007   EE           MOV     A,R6
   \   000008   7005         JNZ     ??Hal_UART_RxBufLen_0
   \   00000A                ; Setup parameters for call to function HalUARTRxAvailDMA
   \   00000A   12....       LCALL   `??HalUARTRxAvailDMA::?relay`; Banked call to: HalUARTRxAvailDMA
   \   00000D   8004         SJMP    ??Hal_UART_RxBufLen_1
    293          #endif
    294          #if (HAL_UART_DMA == 2)
    295            if (port == HAL_UART_PORT_1)  return HalUARTRxAvailDMA();
    296          #endif
    297          #if (HAL_UART_ISR == 1)
    298            if (port == HAL_UART_PORT_0)  return HalUARTRxAvailISR();
    299          #endif
    300          #if (HAL_UART_ISR == 2)
    301            if (port == HAL_UART_PORT_1)  return HalUARTRxAvailISR();
    302          #endif
    303          #if HAL_UART_USB
    304            return HalUARTRxAvailUSB();
    305          #else
    306            return 0;
   \                     ??Hal_UART_RxBufLen_0:
   \   00000F   7A00         MOV     R2,#0x0
   \   000011   7B00         MOV     R3,#0x0
   \                     ??Hal_UART_RxBufLen_1:
   \   000013   7F01         MOV     R7,#0x1
   \   000015   02....       LJMP    ?BANKED_LEAVE_XDATA
    307          #endif
    308          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??findTail::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    findTail

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTInitDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTInitDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTOpenDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTOpenDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTReadDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTReadDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTWriteDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTWriteDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTPollDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTPollDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTRxAvailDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTRxAvailDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTSuspendDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTSuspendDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTResumeDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTResumeDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTIsrDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTIsrDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTInit::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTOpen::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTOpen

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTRead::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTRead

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTWrite::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTWrite

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTSuspend::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTSuspend

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTResume::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTResume

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTPoll::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTPoll

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??Hal_UART_RxBufLen::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_UART_RxBufLen
    309          
    310          /******************************************************************************
    311          ******************************************************************************/

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      2      0   HalUARTInit
        2      0   -> HalUARTInitDMA
      3      0   HalUARTInitDMA
      2     13   HalUARTIsrDMA
      0      9   HalUARTOpen
        0      9   -> HalUARTOpenDMA
      0     18   HalUARTOpenDMA
        0      9   -> osal_memset
      2      0   HalUARTPoll
        2      0   -> HalUARTPollDMA
      1     13   HalUARTPollDMA
        0     13   -> HalUARTIsrDMA
        0     13   -> HalUARTRxAvailDMA
        0     13   -> findTail
      0     11   HalUARTRead
        0     11   -> HalUARTReadDMA
      1     22   HalUARTReadDMA
      2      0   HalUARTResume
        2      0   -> HalUARTResumeDMA
      0      0   HalUARTResumeDMA
      0     22   HalUARTRxAvailDMA
      2      0   HalUARTSuspend
        2      0   -> HalUARTSuspendDMA
      0      0   HalUARTSuspendDMA
      0     11   HalUARTWrite
        0     11   -> HalUARTWriteDMA
      1     26   HalUARTWriteDMA
      0      9   Hal_UART_RxBufLen
        0      9   -> HalUARTRxAvailDMA
      2     13   findTail


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ADCCFG
       1  DMAARM
       1  DMAIRQ
       1  DMAREQ
      14  HalUARTInit
       6  HalUARTInit::?relay
     764  HalUARTInitDMA
       6  HalUARTInitDMA::?relay
      80  HalUARTIsrDMA
       6  HalUARTIsrDMA::?relay
      29  HalUARTOpen
       6  HalUARTOpen::?relay
     213  HalUARTOpenDMA
       6  HalUARTOpenDMA::?relay
      14  HalUARTPoll
       6  HalUARTPoll::?relay
     605  HalUARTPollDMA
       6  HalUARTPollDMA::?relay
      41  HalUARTRead
       6  HalUARTRead::?relay
     250  HalUARTReadDMA
       6  HalUARTReadDMA::?relay
      14  HalUARTResume
       6  HalUARTResume::?relay
      14  HalUARTResumeDMA
       6  HalUARTResumeDMA::?relay
     158  HalUARTRxAvailDMA
       6  HalUARTRxAvailDMA::?relay
      14  HalUARTSuspend
       6  HalUARTSuspend::?relay
      11  HalUARTSuspendDMA
       6  HalUARTSuspendDMA::?relay
      41  HalUARTWrite
       6  HalUARTWrite::?relay
     391  HalUARTWriteDMA
       6  HalUARTWriteDMA::?relay
      24  Hal_UART_RxBufLen
       6  Hal_UART_RxBufLen::?relay
       1  P0DIR
       1  P0IEN
       1  P0SEL
       1  P2DIR
       1  PERCFG
       1  ST0
       1  U0BAUD
       1  U0CSR
       1  U0GCR
       1  U0UCR
       1  _A_IEN0
       1  _A_P0
    1038  dmaCfg
      80  findTail
       6  findTail::?relay

 
 2 757 bytes in segment BANKED_CODE
   108 bytes in segment BANK_RELAYS
    16 bytes in segment SFR_AN
 1 038 bytes in segment XDATA_Z
 
 2 865 bytes of CODE  memory
     0 bytes of DATA  memory (+ 16 bytes shared)
 1 038 bytes of XDATA memory

Errors: none
Warnings: none
