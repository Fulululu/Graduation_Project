###############################################################################
#
# IAR C/C++ Compiler V9.30.1.3056 for 8051                08/Apr/2018  22:32:22
# Copyright 2004-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\DS_CO2_20.c
#    Command line       =  
#        -f
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0x333;
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=0 -DQUEUED_POLL_RATE=0 -DRESPONSE_POLL_RATE=0)
#        -DREJOIN_POLL_RATE=1000
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\DS_CO2_20.c
#        -D ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
#        xLCD_SUPPORTED=DEBUG -lC
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\CoordinatorEB\List
#        -lA
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\CoordinatorEB\List
#        --diag_suppress Pe001,Pa010 -o
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\CoordinatorEB\Obj
#        -e --no_code_motion --debug --core=plain --dptr=16,1
#        --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 8 -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\Source\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ohz
#    List file          =  
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\CoordinatorEB\List\DS_CO2_20.lst
#    Object file        =  
#        F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\CC2530DB\CoordinatorEB\Obj\DS_CO2_20.r51
#
###############################################################################

F:\Zigbeespace\20171020\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\DS_CO2_20.c
      1          //=====================================================================
      2          //文件名称：DS_CO2_20.c
      3          //功能概要：CO2传感器DS_CO2_20构件源文件
      4          //=====================================================================
      5          
      6          #include "DS_CO2_20.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      7          

   \                                 In  segment XDATA_I, align 1, keep-with-next
      8          unsigned char frame[] = {0x42, 0x4D, 0xE3, 0x00, 0x00 , 0x01, 0x72};
   \                     frame:
   \   000000                DS 7
   \   000007                REQUIRE `?<Initializer for frame>`
   \   000007                REQUIRE __INIT_XDATA_I
      9          
     10          //RST------3.3V
     11          
     12          //=====================================================================
     13          //传感器命令协议：
     14          //特征字节  特征字节  指令字节  状态字节1 状态字节2 校验字节1 校验字节2
     15          // 0x42      0x4d      CMD     DATAH      DATAL    LRCH       LRCL
     16          //指令及特征字节的定义：
     17          //CMD  DATAH  DATAL      			说明
     18          //0xe3   x      x        		 被动读数
     19          //校验字生成：
     20          //从特征字开始所有字节累加和
     21          //=====================================================================
     22          
     23          //=========================================================================
     24          //函数名称：DS_CO2_20_init
     25          //函数参数：无
     26          //函数返回：无
     27          //功能概要：初始化SET、RST引脚
     28          //======================================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     29          void DS_CO2_20_Init(void)
   \                     DS_CO2_20_Init:
     30          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     31              P0SEL &= ~0x30;                 //设置P0.4 P0.5为普通IO口
   \   000000   53F3CF       ANL     0xf3,#0xcf
     32              P0DIR |= 0x30;                 //P0.4 P0.5定义为输出口
   \   000003   43FD30       ORL     0xfd,#0x30
     33              //DS_CO2_20_rest();
     34          }
   \   000006   02....       LJMP    ?BRET
   \   000009                REQUIRE P0SEL
   \   000009                REQUIRE P0DIR
     35          
     36          //=========================================================================
     37          //函数名称：DS_CO2_20_control
     38          //函数参数：cmd:控制命令
     39          //函数返回：命令发送成功：0；命令发送失败：0x11
     40          //功能概要：通过命令控制传感器工作状态
     41          //======================================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     42          unsigned char DS_CO2_20_control(void)
   \                     DS_CO2_20_control:
     43          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     44          	unsigned char flag = 0;
     45                  
     46          	flag = HalUARTWrite(0, frame, DS_CO2_20_LENTH_CMD);
     47                  
     48          	//如果发送命令错误，返回错误码
     49          	if(!flag)
   \   000004                ; Setup parameters for call to function HalUARTWrite
   \   000004   7C07         MOV     R4,#0x7
   \   000006   7D00         MOV     R5,#0x0
   \   000008   7A..         MOV     R2,#frame & 0xff
   \   00000A   7B..         MOV     R3,#(frame >> 8) & 0xff
   \   00000C   7900         MOV     R1,#0x0
   \   00000E   12....       LCALL   `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
   \   000011   EA           MOV     A,R2
   \   000012   7004         JNZ     ??DS_CO2_20_control_0
     50          	{
     51          		return DS_CO2_20_ERR_CMDFAIL;
   \   000014   7911         MOV     R1,#0x11
   \   000016   8002         SJMP    ??DS_CO2_20_control_1
     52          	}
     53          
     54          	return 0;
   \                     ??DS_CO2_20_control_0:
   \   000018   7900         MOV     R1,#0x0
   \                     ??DS_CO2_20_control_1:
   \   00001A   D083         POP     DPH
   \   00001C   D082         POP     DPL
   \   00001E   02....       LJMP    ?BRET
     55          }
     56          
     57          //=========================================================================
     58          //函数名称：DS_CO2_20_rest
     59          //函数参数：无
     60          //函数返回：无
     61          //功能概要：通过RST引脚复位传感器
     62          //======================================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     63          void DS_CO2_20_rest(void)
   \                     DS_CO2_20_rest:
     64          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     65          	DS_CO2_20_RST = 0;
   \   000000   C284         CLR     0x80.4
     66                  for(int i=0;i<500;i++);
     67                  DS_CO2_20_RST = 1;
   \   000002   D284         SETB    0x80.4
     68          }
   \   000004   02....       LJMP    ?BRET
   \   000007                REQUIRE _A_P0
     69          
     70          //======================================================================
     71          //函数名称：DS_CO2_20_datarec
     72          //函数参数：databuf:数据接收缓存
     73          //函数返回：接收成功：0 ；接收失败：0x12
     74          //功能概要：接收传感器原始读数
     75          //======================================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     76          unsigned char DS_CO2_20_recdata(unsigned char *databuf)
   \                     DS_CO2_20_recdata:
     77          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
     78          	unsigned char lrcl, lrch, i;
     79          	unsigned int lrcsum = 0, datasum = 0;
   \   000009   75..00       MOV     ?V0,#0x0
   \   00000C   75..00       MOV     ?V1,#0x0
     80                  DS_CO2_20_control();
   \   00000F                ; Setup parameters for call to function DS_CO2_20_control
   \   00000F   12....       LCALL   `??DS_CO2_20_control::?relay`; Banked call to: DS_CO2_20_control
     81                 
     82          	//接收传感器的数据
     83                  i = HalUARTRead(0, databuf, DS_CO2_20_LENTH_DATA);
   \   000012                ; Setup parameters for call to function HalUARTRead
   \   000012   7C0C         MOV     R4,#0xc
   \   000014   7D00         MOV     R5,#0x0
   \   000016   EE           MOV     A,R6
   \   000017   FA           MOV     R2,A
   \   000018   EF           MOV     A,R7
   \   000019   FB           MOV     R3,A
   \   00001A   7900         MOV     R1,#0x0
   \   00001C   12....       LCALL   `??HalUARTRead::?relay`; Banked call to: HalUARTRead
     84          
     85          	//计算校验和
     86          	for(i = 0; i < (DS_CO2_20_LENTH_DATA -2) ; i++)
   \   00001F   7A00         MOV     R2,#0x0
     87          	{
     88          		datasum += databuf[i];
   \                     ??DS_CO2_20_recdata_0:
   \   000021   EA           MOV     A,R2
   \   000022   F8           MOV     R0,A
   \   000023   EE           MOV     A,R6
   \   000024   28           ADD     A,R0
   \   000025   F582         MOV     DPL,A
   \   000027   E4           CLR     A
   \   000028   3F           ADDC    A,R7
   \   000029   F583         MOV     DPH,A
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F8           MOV     R0,A
   \   00002D   E5..         MOV     A,?V0
   \   00002F   28           ADD     A,R0
   \   000030   F5..         MOV     ?V0,A
   \   000032   E4           CLR     A
   \   000033   35..         ADDC    A,?V1
   \   000035   F5..         MOV     ?V1,A
     89          	}
   \   000037   0A           INC     R2
   \   000038   EA           MOV     A,R2
   \   000039   C3           CLR     C
   \   00003A   940A         SUBB    A,#0xa
   \   00003C   40E3         JC      ??DS_CO2_20_recdata_0
     90          	lrcl = databuf[DS_CO2_20_LENTH_DATA-1];
     91          	lrch = databuf[DS_CO2_20_LENTH_DATA-2];
     92          	lrcsum = (lrch<<8)+lrcl;
     93          	//如果校验错误，返回错误码
     94          	if(datasum != lrcsum)
   \   00003E   8E82         MOV     DPL,R6
   \   000040   8F83         MOV     DPH,R7
   \   000042   A3           INC     DPTR
   \   000043   A3           INC     DPTR
   \   000044   A3           INC     DPTR
   \   000045   A3           INC     DPTR
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   A3           INC     DPTR
   \   00004B   A3           INC     DPTR
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   F9           MOV     R1,A
   \   00004E   EE           MOV     A,R6
   \   00004F   240B         ADD     A,#0xb
   \   000051   F582         MOV     DPL,A
   \   000053   E4           CLR     A
   \   000054   3F           ADDC    A,R7
   \   000055   F583         MOV     DPH,A
   \   000057   E0           MOVX    A,@DPTR
   \   000058   65..         XRL     A,?V0
   \   00005A   7003         JNZ     ??DS_CO2_20_recdata_1
   \   00005C   E9           MOV     A,R1
   \   00005D   65..         XRL     A,?V1
   \                     ??DS_CO2_20_recdata_1:
   \   00005F   6004         JZ      ??DS_CO2_20_recdata_2
     95                  {
     96          		return DS_CO2_20_ERR_RECFAIL;
   \   000061   7912         MOV     R1,#0x12
   \   000063   8002         SJMP    ??DS_CO2_20_recdata_3
     97                  }
     98          
     99          	return 0;
   \                     ??DS_CO2_20_recdata_2:
   \   000065   7900         MOV     R1,#0x0
   \                     ??DS_CO2_20_recdata_3:
   \   000067                REQUIRE ?Subroutine0
   \   000067                ; // Fall through to label ?Subroutine0
    100          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    101          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    102          unsigned char DS_CO2_20_Read_Str(unsigned char *buf)
   \                     DS_CO2_20_Read_Str:
    103          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0,R2
   \   00000C   8B..         MOV     ?V1,R3
    104            unsigned char tmp[DS_CO2_20_LENTH_DATA];
    105            unsigned int co2, para1, para2;         //单位ppm; para unuse
    106            unsigned int cnt = 0;
   \   00000E   7EE9         MOV     R6,#-0x17
   \   000010   7F03         MOV     R7,#0x3
    107          
    108            while(DS_CO2_20_recdata(tmp) == DS_CO2_20_ERR_RECFAIL)
   \                     ??DS_CO2_20_Read_Str_0:
   \   000012                ; Setup parameters for call to function DS_CO2_20_recdata
   \   000012   AA..         MOV     R2,?XSP + 0
   \   000014   AB..         MOV     R3,?XSP + 1
   \   000016   12....       LCALL   `??DS_CO2_20_recdata::?relay`; Banked call to: DS_CO2_20_recdata
   \   000019   E9           MOV     A,R1
   \   00001A   6412         XRL     A,#0x12
   \   00001C   7011         JNZ     ??DS_CO2_20_Read_Str_1
    109            {
    110              if(++cnt > 1000)
   \   00001E   12....       LCALL   ?Subroutine1 & 0xFFFF
    111                return 1;         //timeout,sensor no response
    112            }
   \                     ??CrossCallReturnLabel_0:
   \   000021   70EF         JNZ     ??DS_CO2_20_Read_Str_0
    113            co2 = (tmp[4]<<8) + tmp[5];
    114            para1 = (tmp[6]<<8) + tmp[7];
    115            para2 = (tmp[8]<<8) + tmp[9];
    116            (void)para1;
    117            (void)para2;
    118                
    119            if(co2 < 3000)
    120            {
    121              sprintf((char *)buf, "%4d", co2);
    122              return 0;
    123            }
    124            return 1;              //should not arrive here
   \                     ??DS_CO2_20_Read_Str_2:
   \   000023   7901         MOV     R1,#0x1
   \                     ??DS_CO2_20_Read_Str_3:
   \   000025   740C         MOV     A,#0xc
   \   000027   12....       LCALL   ?DEALLOC_XSTACK8
   \   00002A   7F04         MOV     R7,#0x4
   \   00002C   02....       LJMP    ?BANKED_LEAVE_XDATA
   \                     ??DS_CO2_20_Read_Str_1:
   \   00002F   7404         MOV     A,#0x4
   \   000031   12....       LCALL   ?XSTACK_DISP0_8
   \   000034   E0           MOVX    A,@DPTR
   \   000035   F9           MOV     R1,A
   \   000036   7405         MOV     A,#0x5
   \   000038   12....       LCALL   ?XSTACK_DISP0_8
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   FA           MOV     R2,A
   \   00003D   E4           CLR     A
   \   00003E   2A           ADD     A,R2
   \   00003F   F5..         MOV     ?V2,A
   \   000041   E9           MOV     A,R1
   \   000042   F5..         MOV     ?V3,A
   \   000044   EA           MOV     A,R2
   \   000045   94B8         SUBB    A,#-0x48
   \   000047   E9           MOV     A,R1
   \   000048   940B         SUBB    A,#0xb
   \   00004A   50D7         JNC     ??DS_CO2_20_Read_Str_2
   \   00004C                ; Setup parameters for call to function sprintf
   \   00004C   78..         MOV     R0,#?V2
   \   00004E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000051   7C..         MOV     R4,#`?<Constant "%4d">` & 0xff
   \   000053   7D..         MOV     R5,#(`?<Constant "%4d">` >> 8) & 0xff
   \   000055   AA..         MOV     R2,?V0
   \   000057   AB..         MOV     R3,?V1
   \   000059   12....       LCALL   `??sprintf::?relay`  ; Banked call to: sprintf
   \   00005C   7402         MOV     A,#0x2
   \   00005E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000061   7900         MOV     R1,#0x0
   \   000063   80C0         SJMP    ??DS_CO2_20_Read_Str_3
    125          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   EE           MOV     A,R6
   \   000001   24FF         ADD     A,#-0x1
   \   000003   1E           DEC     R6
   \   000004   EF           MOV     A,R7
   \   000005   34FF         ADDC    A,#-0x1
   \   000007   FF           MOV     R7,A
   \   000008   EE           MOV     A,R6
   \   000009   4F           ORL     A,R7
   \   00000A   22           RET
    126          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    127          unsigned char DS_CO2_20_Read(unsigned char *buf)
   \                     DS_CO2_20_Read:
    128          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0,R2
   \   00000C   8B..         MOV     ?V1,R3
    129            unsigned char tmp[DS_CO2_20_LENTH_DATA];
    130            unsigned int co2, para1, para2;         //单位ppm; para unuse
    131            unsigned int cnt = 0;
   \   00000E   7EE9         MOV     R6,#-0x17
   \   000010   7F03         MOV     R7,#0x3
    132          
    133            while(DS_CO2_20_recdata(tmp) == DS_CO2_20_ERR_RECFAIL)
   \                     ??DS_CO2_20_Read_0:
   \   000012                ; Setup parameters for call to function DS_CO2_20_recdata
   \   000012   AA..         MOV     R2,?XSP + 0
   \   000014   AB..         MOV     R3,?XSP + 1
   \   000016   12....       LCALL   `??DS_CO2_20_recdata::?relay`; Banked call to: DS_CO2_20_recdata
   \   000019   E9           MOV     A,R1
   \   00001A   6412         XRL     A,#0x12
   \   00001C   700F         JNZ     ??DS_CO2_20_Read_1
    134            {
    135              if(++cnt > 1000)
   \   00001E   12....       LCALL   ?Subroutine1 & 0xFFFF
    136                return 1;         //timeout,sensor no response
    137            }
   \                     ??CrossCallReturnLabel_1:
   \   000021   70EF         JNZ     ??DS_CO2_20_Read_0
    138            co2 = (tmp[4]<<8) + tmp[5];
    139            para1 = (tmp[6]<<8) + tmp[7];
    140            para2 = (tmp[8]<<8) + tmp[9];
    141            (void)para1;
    142            (void)para2;
    143                
    144            if(co2 < 3000)
    145            {
    146              buf[0] = tmp[4];
    147              buf[1] = tmp[5];
    148              return 0;
    149            }
    150            return 1;              //should not arrive here
   \                     ??DS_CO2_20_Read_2:
   \   000023   7901         MOV     R1,#0x1
   \                     ??DS_CO2_20_Read_3:
   \   000025   740C         MOV     A,#0xc
   \   000027   12....       LCALL   ?DEALLOC_XSTACK8
   \   00002A   02....       LJMP    ?Subroutine0 & 0xFFFF
   \                     ??DS_CO2_20_Read_1:
   \   00002D   7404         MOV     A,#0x4
   \   00002F   12....       LCALL   ?XSTACK_DISP0_8
   \   000032   E0           MOVX    A,@DPTR
   \   000033   F9           MOV     R1,A
   \   000034   7405         MOV     A,#0x5
   \   000036   12....       LCALL   ?XSTACK_DISP0_8
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   FA           MOV     R2,A
   \   00003B   E4           CLR     A
   \   00003C   2A           ADD     A,R2
   \   00003D   94B8         SUBB    A,#-0x48
   \   00003F   E9           MOV     A,R1
   \   000040   940B         SUBB    A,#0xb
   \   000042   50DF         JNC     ??DS_CO2_20_Read_2
   \   000044   7404         MOV     A,#0x4
   \   000046   12....       LCALL   ?XSTACK_DISP0_8
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   85..82       MOV     DPL,?V0
   \   00004D   85..83       MOV     DPH,?V1
   \   000050   F0           MOVX    @DPTR,A
   \   000051   7405         MOV     A,#0x5
   \   000053   12....       LCALL   ?XSTACK_DISP0_8
   \   000056   E0           MOVX    A,@DPTR
   \   000057   85..82       MOV     DPL,?V0
   \   00005A   85..83       MOV     DPH,?V1
   \   00005D   A3           INC     DPTR
   \   00005E   F0           MOVX    @DPTR,A
   \   00005F   7900         MOV     R1,#0x0
   \   000061   80C2         SJMP    ??DS_CO2_20_Read_3
    151          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for frame>`:
   \   000000   42           DB 66
   \   000001   4D           DB 77
   \   000002   E3           DB 227
   \   000003   00           DB 0
   \   000004   00           DB 0
   \   000005   01           DB 1
   \   000006   72           DB 114

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DS_CO2_20_Init::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS_CO2_20_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DS_CO2_20_control::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS_CO2_20_control

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DS_CO2_20_rest::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS_CO2_20_rest

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DS_CO2_20_recdata::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS_CO2_20_recdata

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DS_CO2_20_Read_Str::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS_CO2_20_Read_Str

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??DS_CO2_20_Read::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS_CO2_20_Read

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%4d">`:
   \   000000   25346400     DB "%4d"

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0      0   DS_CO2_20_Init
      1     22   DS_CO2_20_Read
        0     22   -> DS_CO2_20_recdata
      0     26   DS_CO2_20_Read_Str
        0     24   -> DS_CO2_20_recdata
        0     26   -> sprintf
      2     10   DS_CO2_20_control
        2      0   -> HalUARTWrite
      0     34   DS_CO2_20_recdata
        0     10   -> DS_CO2_20_control
        0     10   -> HalUARTRead
      0      0   DS_CO2_20_rest


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "%4d">
       7  ?<Initializer for frame>
       5  ?Subroutine0
      11  ?Subroutine1
       9  DS_CO2_20_Init
       6  DS_CO2_20_Init::?relay
      99  DS_CO2_20_Read
       6  DS_CO2_20_Read::?relay
     101  DS_CO2_20_Read_Str
       6  DS_CO2_20_Read_Str::?relay
      33  DS_CO2_20_control
       6  DS_CO2_20_control::?relay
     103  DS_CO2_20_recdata
       6  DS_CO2_20_recdata::?relay
       7  DS_CO2_20_rest
       6  DS_CO2_20_rest::?relay
       1  P0DIR
       1  P0SEL
       1  _A_P0
       7  frame

 
 368 bytes in segment BANKED_CODE
  36 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   7 bytes in segment XDATA_I
   7 bytes in segment XDATA_ID
   4 bytes in segment XDATA_ROM_C
 
 411 bytes of CODE  memory
   4 bytes of CONST memory
   0 bytes of DATA  memory (+ 3 bytes shared)
   7 bytes of XDATA memory

Errors: none
Warnings: none
